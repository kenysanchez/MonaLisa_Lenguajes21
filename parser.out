Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> V F Main
Rule 2     V -> LET aux asignacion K puntoycoma V
Rule 3     V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
Rule 4     V -> <empty>
Rule 5     aux -> type ID
Rule 6     type -> INT
Rule 7     type -> FLT
Rule 8     A -> num
Rule 9     A -> A coma num
Rule 10    Main -> BEGIN puntoycoma Z END puntoycoma
Rule 11    Main -> <empty>
Rule 12    Z -> S puntoycoma
Rule 13    Z -> Z S puntoycoma
Rule 14    K -> ID
Rule 15    K -> num
Rule 16    F -> F FUNCTION ID abrellave S cierrallave
Rule 17    F -> <empty>
Rule 18    S -> ID abreparentesis cierraparentesis
Rule 19    S -> IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
Rule 20    S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
Rule 21    S -> PRINT abreparentesis M cierraparentesis
Rule 22    S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
Rule 23    S -> WHILE C abrellave Z cierrallave
Rule 24    S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
Rule 25    S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
Rule 26    S -> ID D asignacion E
Rule 27    S -> BREAK
Rule 28    S -> <empty>
Rule 29    B -> abrellave BREAK cierrallave
Rule 30    B -> <empty>
Rule 31    M -> comillasdobles K comillasdobles
Rule 32    M -> A
Rule 33    D -> abreparentesis A cierraparentesis
Rule 34    D -> <empty>
Rule 35    E -> expSuma
Rule 36    E -> expResta
Rule 37    E -> T
Rule 38    expSuma -> E suma T
Rule 39    expResta -> E resta T
Rule 40    T -> expMult
Rule 41    T -> expDiv
Rule 42    T -> X
Rule 43    expMult -> T multiplicacion X
Rule 44    expDiv -> T dividir X
Rule 45    X -> IDaux
Rule 46    X -> ID abreparentesis A cierraparentesis
Rule 47    X -> num
Rule 48    X -> abreparentesis E cierraparentesis
Rule 49    IDaux -> ID
Rule 50    EL -> TL
Rule 51    EL -> orAux
Rule 52    orAux -> EL OR TL
Rule 53    TL -> C
Rule 54    TL -> andAux
Rule 55    andAux -> TL AND C
Rule 56    C -> abreparentesis EL cierraparentesis
Rule 57    C -> Comp
Rule 58    Comp -> J W J
Rule 59    J -> ID abreparentesis A cierraparentesis
Rule 60    J -> IDoux
Rule 61    J -> num
Rule 62    IDoux -> ID
Rule 63    W -> mayorigual
Rule 64    W -> menorigual
Rule 65    W -> menor
Rule 66    W -> mayor
Rule 67    W -> igualque
Rule 68    W -> diferenteque

Terminals, with rules where they appear

AND                  : 55
BEGIN                : 10
BREAK                : 27 29
ELSE                 : 19 22
END                  : 10
FLT                  : 7
FOR                  : 25
FUNCTION             : 16
ID                   : 5 14 16 18 20 22 25 25 26 46 49 59 62
IF                   : 19 22
INT                  : 6
LET                  : 2 3 22 25
LOOP                 : 24
OR                   : 52
PRINT                : 21
READ                 : 20
WHILE                : 23
abrellave            : 16 19 19 22 22 23 24 25 29
abreparentesis       : 3 18 20 20 21 22 24 25 33 46 48 56 59
asignacion           : 2 3 22 25 26
cierrallave          : 16 19 19 22 22 23 24 25 29
cierraparentesis     : 3 18 20 20 21 22 24 25 33 46 48 56 59
coma                 : 9
comillasdobles       : 31 31
diferenteque         : 68
dividir              : 44
error                : 
igualque             : 67
mayor                : 66
mayorigual           : 63
menor                : 65
menorigual           : 64
multiplicacion       : 43
num                  : 8 9 15 25 47 61
puntoycoma           : 2 3 10 10 12 13 25 25
resta                : 39
suma                 : 25 38

Nonterminals, with rules where they appear

A                    : 3 9 20 32 33 46 59
B                    : 24
C                    : 22 23 24 25 53 55
Comp                 : 57
D                    : 26
E                    : 26 38 39 48
EL                   : 19 52 56
F                    : 1 16
IDaux                : 45
IDoux                : 60
J                    : 58 58
K                    : 2 25 31
M                    : 21
Main                 : 1
Programa             : 0
S                    : 12 13 16
T                    : 37 38 39 43 44
TL                   : 50 52 55
V                    : 1 2 3
W                    : 58
X                    : 42 43 44
Z                    : 10 13 19 19 22 22 23 24 25
andAux               : 54
aux                  : 2 3
expDiv               : 41
expMult              : 40
expResta             : 36
expSuma              : 35
orAux                : 51
type                 : 5 25

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . V F Main
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    Programa                       shift and go to state 1
    V                              shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> V . F Main
    (16) F -> . F FUNCTION ID abrellave S cierrallave
    (17) F -> .

    FUNCTION        reduce using rule 17 (F -> .)
    BEGIN           reduce using rule 17 (F -> .)
    $end            reduce using rule 17 (F -> .)

    F                              shift and go to state 4

state 3

    (2) V -> LET . aux asignacion K puntoycoma V
    (3) V -> LET . aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (5) aux -> . type ID
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 7
    FLT             shift and go to state 8

    aux                            shift and go to state 5
    type                           shift and go to state 6

state 4

    (1) Programa -> V F . Main
    (16) F -> F . FUNCTION ID abrellave S cierrallave
    (10) Main -> . BEGIN puntoycoma Z END puntoycoma
    (11) Main -> .

    FUNCTION        shift and go to state 10
    BEGIN           shift and go to state 11
    $end            reduce using rule 11 (Main -> .)

    Main                           shift and go to state 9

state 5

    (2) V -> LET aux . asignacion K puntoycoma V
    (3) V -> LET aux . asignacion abreparentesis A cierraparentesis puntoycoma V

    asignacion      shift and go to state 12


state 6

    (5) aux -> type . ID

    ID              shift and go to state 13


state 7

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 8

    (7) type -> FLT .

    ID              reduce using rule 7 (type -> FLT .)


state 9

    (1) Programa -> V F Main .

    $end            reduce using rule 1 (Programa -> V F Main .)


state 10

    (16) F -> F FUNCTION . ID abrellave S cierrallave

    ID              shift and go to state 14


state 11

    (10) Main -> BEGIN . puntoycoma Z END puntoycoma

    puntoycoma      shift and go to state 15


state 12

    (2) V -> LET aux asignacion . K puntoycoma V
    (3) V -> LET aux asignacion . abreparentesis A cierraparentesis puntoycoma V
    (14) K -> . ID
    (15) K -> . num

    abreparentesis  shift and go to state 17
    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 16

state 13

    (5) aux -> type ID .

    asignacion      reduce using rule 5 (aux -> type ID .)


state 14

    (16) F -> F FUNCTION ID . abrellave S cierrallave

    abrellave       shift and go to state 20


state 15

    (10) Main -> BEGIN puntoycoma . Z END puntoycoma
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 21
    S                              shift and go to state 22

state 16

    (2) V -> LET aux asignacion K . puntoycoma V

    puntoycoma      shift and go to state 32


state 17

    (3) V -> LET aux asignacion abreparentesis . A cierraparentesis puntoycoma V
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 33

state 18

    (14) K -> ID .

    puntoycoma      reduce using rule 14 (K -> ID .)
    comillasdobles  reduce using rule 14 (K -> ID .)


state 19

    (15) K -> num .

    puntoycoma      reduce using rule 15 (K -> num .)
    comillasdobles  reduce using rule 15 (K -> num .)


state 20

    (16) F -> F FUNCTION ID abrellave . S cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    cierrallave     reduce using rule 28 (S -> .)

    S                              shift and go to state 35

state 21

    (10) Main -> BEGIN puntoycoma Z . END puntoycoma
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    END             shift and go to state 36
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 22

    (12) Z -> S . puntoycoma

    puntoycoma      shift and go to state 38


state 23

    (18) S -> ID . abreparentesis cierraparentesis
    (26) S -> ID . D asignacion E
    (33) D -> . abreparentesis A cierraparentesis
    (34) D -> .

    abreparentesis  shift and go to state 39
    asignacion      reduce using rule 34 (D -> .)

    D                              shift and go to state 40

state 24

    (19) S -> IF . EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (50) EL -> . TL
    (51) EL -> . orAux
    (53) TL -> . C
    (54) TL -> . andAux
    (52) orAux -> . EL OR TL
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (55) andAux -> . TL AND C
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    EL                             shift and go to state 41
    TL                             shift and go to state 42
    orAux                          shift and go to state 43
    C                              shift and go to state 44
    andAux                         shift and go to state 45
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 25

    (20) S -> READ . abreparentesis ID abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 52


state 26

    (21) S -> PRINT . abreparentesis M cierraparentesis

    abreparentesis  shift and go to state 53


state 27

    (22) S -> LET . ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    ID              shift and go to state 54


state 28

    (23) S -> WHILE . C abrellave Z cierrallave
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    C                              shift and go to state 55
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 29

    (24) S -> LOOP . abrellave Z abreparentesis C cierraparentesis B cierrallave

    abrellave       shift and go to state 56


state 30

    (25) S -> FOR . abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    abreparentesis  shift and go to state 57


state 31

    (27) S -> BREAK .

    puntoycoma      reduce using rule 27 (S -> BREAK .)
    cierrallave     reduce using rule 27 (S -> BREAK .)


state 32

    (2) V -> LET aux asignacion K puntoycoma . V
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    V                              shift and go to state 58

state 33

    (3) V -> LET aux asignacion abreparentesis A . cierraparentesis puntoycoma V
    (9) A -> A . coma num

    cierraparentesis shift and go to state 59
    coma            shift and go to state 60


state 34

    (8) A -> num .

    cierraparentesis reduce using rule 8 (A -> num .)
    coma            reduce using rule 8 (A -> num .)


state 35

    (16) F -> F FUNCTION ID abrellave S . cierrallave

    cierrallave     shift and go to state 61


state 36

    (10) Main -> BEGIN puntoycoma Z END . puntoycoma

    puntoycoma      shift and go to state 62


state 37

    (13) Z -> Z S . puntoycoma

    puntoycoma      shift and go to state 63


state 38

    (12) Z -> S puntoycoma .

    END             reduce using rule 12 (Z -> S puntoycoma .)
    ID              reduce using rule 12 (Z -> S puntoycoma .)
    IF              reduce using rule 12 (Z -> S puntoycoma .)
    READ            reduce using rule 12 (Z -> S puntoycoma .)
    PRINT           reduce using rule 12 (Z -> S puntoycoma .)
    LET             reduce using rule 12 (Z -> S puntoycoma .)
    WHILE           reduce using rule 12 (Z -> S puntoycoma .)
    LOOP            reduce using rule 12 (Z -> S puntoycoma .)
    FOR             reduce using rule 12 (Z -> S puntoycoma .)
    BREAK           reduce using rule 12 (Z -> S puntoycoma .)
    puntoycoma      reduce using rule 12 (Z -> S puntoycoma .)
    abreparentesis  reduce using rule 12 (Z -> S puntoycoma .)
    cierrallave     reduce using rule 12 (Z -> S puntoycoma .)


state 39

    (18) S -> ID abreparentesis . cierraparentesis
    (33) D -> abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    cierraparentesis shift and go to state 64
    num             shift and go to state 34

    A                              shift and go to state 65

state 40

    (26) S -> ID D . asignacion E

    asignacion      shift and go to state 66


state 41

    (19) S -> IF EL . abrellave Z cierrallave ELSE abrellave Z cierrallave
    (52) orAux -> EL . OR TL

    abrellave       shift and go to state 67
    OR              shift and go to state 68


state 42

    (50) EL -> TL .
    (55) andAux -> TL . AND C

    abrellave       reduce using rule 50 (EL -> TL .)
    OR              reduce using rule 50 (EL -> TL .)
    cierraparentesis reduce using rule 50 (EL -> TL .)
    AND             shift and go to state 69


state 43

    (51) EL -> orAux .

    abrellave       reduce using rule 51 (EL -> orAux .)
    OR              reduce using rule 51 (EL -> orAux .)
    cierraparentesis reduce using rule 51 (EL -> orAux .)


state 44

    (53) TL -> C .

    AND             reduce using rule 53 (TL -> C .)
    abrellave       reduce using rule 53 (TL -> C .)
    OR              reduce using rule 53 (TL -> C .)
    cierraparentesis reduce using rule 53 (TL -> C .)


state 45

    (54) TL -> andAux .

    AND             reduce using rule 54 (TL -> andAux .)
    abrellave       reduce using rule 54 (TL -> andAux .)
    OR              reduce using rule 54 (TL -> andAux .)
    cierraparentesis reduce using rule 54 (TL -> andAux .)


state 46

    (56) C -> abreparentesis . EL cierraparentesis
    (50) EL -> . TL
    (51) EL -> . orAux
    (53) TL -> . C
    (54) TL -> . andAux
    (52) orAux -> . EL OR TL
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (55) andAux -> . TL AND C
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    EL                             shift and go to state 70
    TL                             shift and go to state 42
    orAux                          shift and go to state 43
    C                              shift and go to state 44
    andAux                         shift and go to state 45
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 47

    (57) C -> Comp .

    AND             reduce using rule 57 (C -> Comp .)
    abrellave       reduce using rule 57 (C -> Comp .)
    OR              reduce using rule 57 (C -> Comp .)
    cierraparentesis reduce using rule 57 (C -> Comp .)
    puntoycoma      reduce using rule 57 (C -> Comp .)


state 48

    (58) Comp -> J . W J
    (63) W -> . mayorigual
    (64) W -> . menorigual
    (65) W -> . menor
    (66) W -> . mayor
    (67) W -> . igualque
    (68) W -> . diferenteque

    mayorigual      shift and go to state 72
    menorigual      shift and go to state 73
    menor           shift and go to state 74
    mayor           shift and go to state 75
    igualque        shift and go to state 76
    diferenteque    shift and go to state 77

    W                              shift and go to state 71

state 49

    (59) J -> ID . abreparentesis A cierraparentesis
    (62) IDoux -> ID .

    abreparentesis  shift and go to state 78
    mayorigual      reduce using rule 62 (IDoux -> ID .)
    menorigual      reduce using rule 62 (IDoux -> ID .)
    menor           reduce using rule 62 (IDoux -> ID .)
    mayor           reduce using rule 62 (IDoux -> ID .)
    igualque        reduce using rule 62 (IDoux -> ID .)
    diferenteque    reduce using rule 62 (IDoux -> ID .)
    AND             reduce using rule 62 (IDoux -> ID .)
    abrellave       reduce using rule 62 (IDoux -> ID .)
    OR              reduce using rule 62 (IDoux -> ID .)
    cierraparentesis reduce using rule 62 (IDoux -> ID .)
    puntoycoma      reduce using rule 62 (IDoux -> ID .)


state 50

    (60) J -> IDoux .

    mayorigual      reduce using rule 60 (J -> IDoux .)
    menorigual      reduce using rule 60 (J -> IDoux .)
    menor           reduce using rule 60 (J -> IDoux .)
    mayor           reduce using rule 60 (J -> IDoux .)
    igualque        reduce using rule 60 (J -> IDoux .)
    diferenteque    reduce using rule 60 (J -> IDoux .)
    AND             reduce using rule 60 (J -> IDoux .)
    abrellave       reduce using rule 60 (J -> IDoux .)
    OR              reduce using rule 60 (J -> IDoux .)
    cierraparentesis reduce using rule 60 (J -> IDoux .)
    puntoycoma      reduce using rule 60 (J -> IDoux .)


state 51

    (61) J -> num .

    mayorigual      reduce using rule 61 (J -> num .)
    menorigual      reduce using rule 61 (J -> num .)
    menor           reduce using rule 61 (J -> num .)
    mayor           reduce using rule 61 (J -> num .)
    igualque        reduce using rule 61 (J -> num .)
    diferenteque    reduce using rule 61 (J -> num .)
    AND             reduce using rule 61 (J -> num .)
    abrellave       reduce using rule 61 (J -> num .)
    OR              reduce using rule 61 (J -> num .)
    cierraparentesis reduce using rule 61 (J -> num .)
    puntoycoma      reduce using rule 61 (J -> num .)


state 52

    (20) S -> READ abreparentesis . ID abreparentesis A cierraparentesis cierraparentesis

    ID              shift and go to state 79


state 53

    (21) S -> PRINT abreparentesis . M cierraparentesis
    (31) M -> . comillasdobles K comillasdobles
    (32) M -> . A
    (8) A -> . num
    (9) A -> . A coma num

    comillasdobles  shift and go to state 81
    num             shift and go to state 34

    M                              shift and go to state 80
    A                              shift and go to state 82

state 54

    (22) S -> LET ID . asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    asignacion      shift and go to state 83


state 55

    (23) S -> WHILE C . abrellave Z cierrallave

    abrellave       shift and go to state 84


state 56

    (24) S -> LOOP abrellave . Z abreparentesis C cierraparentesis B cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 85
    S                              shift and go to state 22

state 57

    (25) S -> FOR abreparentesis . LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    LET             shift and go to state 86


state 58

    (2) V -> LET aux asignacion K puntoycoma V .

    FUNCTION        reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)
    BEGIN           reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)
    $end            reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)


state 59

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis . puntoycoma V

    puntoycoma      shift and go to state 87


state 60

    (9) A -> A coma . num

    num             shift and go to state 88


state 61

    (16) F -> F FUNCTION ID abrellave S cierrallave .

    FUNCTION        reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    BEGIN           reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    $end            reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)


state 62

    (10) Main -> BEGIN puntoycoma Z END puntoycoma .

    $end            reduce using rule 10 (Main -> BEGIN puntoycoma Z END puntoycoma .)


state 63

    (13) Z -> Z S puntoycoma .

    END             reduce using rule 13 (Z -> Z S puntoycoma .)
    ID              reduce using rule 13 (Z -> Z S puntoycoma .)
    IF              reduce using rule 13 (Z -> Z S puntoycoma .)
    READ            reduce using rule 13 (Z -> Z S puntoycoma .)
    PRINT           reduce using rule 13 (Z -> Z S puntoycoma .)
    LET             reduce using rule 13 (Z -> Z S puntoycoma .)
    WHILE           reduce using rule 13 (Z -> Z S puntoycoma .)
    LOOP            reduce using rule 13 (Z -> Z S puntoycoma .)
    FOR             reduce using rule 13 (Z -> Z S puntoycoma .)
    BREAK           reduce using rule 13 (Z -> Z S puntoycoma .)
    puntoycoma      reduce using rule 13 (Z -> Z S puntoycoma .)
    abreparentesis  reduce using rule 13 (Z -> Z S puntoycoma .)
    cierrallave     reduce using rule 13 (Z -> Z S puntoycoma .)


state 64

    (18) S -> ID abreparentesis cierraparentesis .

    puntoycoma      reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)
    cierrallave     reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)


state 65

    (33) D -> abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 89
    coma            shift and go to state 60


state 66

    (26) S -> ID D asignacion . E
    (35) E -> . expSuma
    (36) E -> . expResta
    (37) E -> . T
    (38) expSuma -> . E suma T
    (39) expResta -> . E resta T
    (40) T -> . expMult
    (41) T -> . expDiv
    (42) T -> . X
    (43) expMult -> . T multiplicacion X
    (44) expDiv -> . T dividir X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    E                              shift and go to state 91
    expSuma                        shift and go to state 92
    expResta                       shift and go to state 93
    T                              shift and go to state 94
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 67

    (19) S -> IF EL abrellave . Z cierrallave ELSE abrellave Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 101
    S                              shift and go to state 22

state 68

    (52) orAux -> EL OR . TL
    (53) TL -> . C
    (54) TL -> . andAux
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (55) andAux -> . TL AND C
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    TL                             shift and go to state 102
    C                              shift and go to state 44
    andAux                         shift and go to state 45
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 69

    (55) andAux -> TL AND . C
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    C                              shift and go to state 103
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 70

    (56) C -> abreparentesis EL . cierraparentesis
    (52) orAux -> EL . OR TL

    cierraparentesis shift and go to state 104
    OR              shift and go to state 68


state 71

    (58) Comp -> J W . J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    ID              shift and go to state 49
    num             shift and go to state 51

    J                              shift and go to state 105
    IDoux                          shift and go to state 50

state 72

    (63) W -> mayorigual .

    ID              reduce using rule 63 (W -> mayorigual .)
    num             reduce using rule 63 (W -> mayorigual .)


state 73

    (64) W -> menorigual .

    ID              reduce using rule 64 (W -> menorigual .)
    num             reduce using rule 64 (W -> menorigual .)


state 74

    (65) W -> menor .

    ID              reduce using rule 65 (W -> menor .)
    num             reduce using rule 65 (W -> menor .)


state 75

    (66) W -> mayor .

    ID              reduce using rule 66 (W -> mayor .)
    num             reduce using rule 66 (W -> mayor .)


state 76

    (67) W -> igualque .

    ID              reduce using rule 67 (W -> igualque .)
    num             reduce using rule 67 (W -> igualque .)


state 77

    (68) W -> diferenteque .

    ID              reduce using rule 68 (W -> diferenteque .)
    num             reduce using rule 68 (W -> diferenteque .)


state 78

    (59) J -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 106

state 79

    (20) S -> READ abreparentesis ID . abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 107


state 80

    (21) S -> PRINT abreparentesis M . cierraparentesis

    cierraparentesis shift and go to state 108


state 81

    (31) M -> comillasdobles . K comillasdobles
    (14) K -> . ID
    (15) K -> . num

    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 109

state 82

    (32) M -> A .
    (9) A -> A . coma num

    cierraparentesis reduce using rule 32 (M -> A .)
    coma            shift and go to state 60


state 83

    (22) S -> LET ID asignacion . IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    IF              shift and go to state 110


state 84

    (23) S -> WHILE C abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 111
    S                              shift and go to state 22

state 85

    (24) S -> LOOP abrellave Z . abreparentesis C cierraparentesis B cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    abreparentesis  shift and go to state 112
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 86

    (25) S -> FOR abreparentesis LET . type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 7
    FLT             shift and go to state 8

    type                           shift and go to state 113

state 87

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma . V
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    V                              shift and go to state 114

state 88

    (9) A -> A coma num .

    cierraparentesis reduce using rule 9 (A -> A coma num .)
    coma            reduce using rule 9 (A -> A coma num .)


state 89

    (33) D -> abreparentesis A cierraparentesis .

    asignacion      reduce using rule 33 (D -> abreparentesis A cierraparentesis .)


state 90

    (46) X -> ID . abreparentesis A cierraparentesis
    (49) IDaux -> ID .

    abreparentesis  shift and go to state 115
    multiplicacion  reduce using rule 49 (IDaux -> ID .)
    dividir         reduce using rule 49 (IDaux -> ID .)
    suma            reduce using rule 49 (IDaux -> ID .)
    resta           reduce using rule 49 (IDaux -> ID .)
    puntoycoma      reduce using rule 49 (IDaux -> ID .)
    cierrallave     reduce using rule 49 (IDaux -> ID .)
    cierraparentesis reduce using rule 49 (IDaux -> ID .)


state 91

    (26) S -> ID D asignacion E .
    (38) expSuma -> E . suma T
    (39) expResta -> E . resta T

    puntoycoma      reduce using rule 26 (S -> ID D asignacion E .)
    cierrallave     reduce using rule 26 (S -> ID D asignacion E .)
    suma            shift and go to state 116
    resta           shift and go to state 117


state 92

    (35) E -> expSuma .

    suma            reduce using rule 35 (E -> expSuma .)
    resta           reduce using rule 35 (E -> expSuma .)
    puntoycoma      reduce using rule 35 (E -> expSuma .)
    cierrallave     reduce using rule 35 (E -> expSuma .)
    cierraparentesis reduce using rule 35 (E -> expSuma .)


state 93

    (36) E -> expResta .

    suma            reduce using rule 36 (E -> expResta .)
    resta           reduce using rule 36 (E -> expResta .)
    puntoycoma      reduce using rule 36 (E -> expResta .)
    cierrallave     reduce using rule 36 (E -> expResta .)
    cierraparentesis reduce using rule 36 (E -> expResta .)


state 94

    (37) E -> T .
    (43) expMult -> T . multiplicacion X
    (44) expDiv -> T . dividir X

    suma            reduce using rule 37 (E -> T .)
    resta           reduce using rule 37 (E -> T .)
    puntoycoma      reduce using rule 37 (E -> T .)
    cierrallave     reduce using rule 37 (E -> T .)
    cierraparentesis reduce using rule 37 (E -> T .)
    multiplicacion  shift and go to state 118
    dividir         shift and go to state 119


state 95

    (40) T -> expMult .

    multiplicacion  reduce using rule 40 (T -> expMult .)
    dividir         reduce using rule 40 (T -> expMult .)
    suma            reduce using rule 40 (T -> expMult .)
    resta           reduce using rule 40 (T -> expMult .)
    puntoycoma      reduce using rule 40 (T -> expMult .)
    cierrallave     reduce using rule 40 (T -> expMult .)
    cierraparentesis reduce using rule 40 (T -> expMult .)


state 96

    (41) T -> expDiv .

    multiplicacion  reduce using rule 41 (T -> expDiv .)
    dividir         reduce using rule 41 (T -> expDiv .)
    suma            reduce using rule 41 (T -> expDiv .)
    resta           reduce using rule 41 (T -> expDiv .)
    puntoycoma      reduce using rule 41 (T -> expDiv .)
    cierrallave     reduce using rule 41 (T -> expDiv .)
    cierraparentesis reduce using rule 41 (T -> expDiv .)


state 97

    (42) T -> X .

    multiplicacion  reduce using rule 42 (T -> X .)
    dividir         reduce using rule 42 (T -> X .)
    suma            reduce using rule 42 (T -> X .)
    resta           reduce using rule 42 (T -> X .)
    puntoycoma      reduce using rule 42 (T -> X .)
    cierrallave     reduce using rule 42 (T -> X .)
    cierraparentesis reduce using rule 42 (T -> X .)


state 98

    (45) X -> IDaux .

    multiplicacion  reduce using rule 45 (X -> IDaux .)
    dividir         reduce using rule 45 (X -> IDaux .)
    suma            reduce using rule 45 (X -> IDaux .)
    resta           reduce using rule 45 (X -> IDaux .)
    puntoycoma      reduce using rule 45 (X -> IDaux .)
    cierrallave     reduce using rule 45 (X -> IDaux .)
    cierraparentesis reduce using rule 45 (X -> IDaux .)


state 99

    (48) X -> abreparentesis . E cierraparentesis
    (35) E -> . expSuma
    (36) E -> . expResta
    (37) E -> . T
    (38) expSuma -> . E suma T
    (39) expResta -> . E resta T
    (40) T -> . expMult
    (41) T -> . expDiv
    (42) T -> . X
    (43) expMult -> . T multiplicacion X
    (44) expDiv -> . T dividir X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    E                              shift and go to state 120
    expSuma                        shift and go to state 92
    expResta                       shift and go to state 93
    T                              shift and go to state 94
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 100

    (47) X -> num .

    multiplicacion  reduce using rule 47 (X -> num .)
    dividir         reduce using rule 47 (X -> num .)
    suma            reduce using rule 47 (X -> num .)
    resta           reduce using rule 47 (X -> num .)
    puntoycoma      reduce using rule 47 (X -> num .)
    cierrallave     reduce using rule 47 (X -> num .)
    cierraparentesis reduce using rule 47 (X -> num .)


state 101

    (19) S -> IF EL abrellave Z . cierrallave ELSE abrellave Z cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 121
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 102

    (52) orAux -> EL OR TL .
    (55) andAux -> TL . AND C

    abrellave       reduce using rule 52 (orAux -> EL OR TL .)
    OR              reduce using rule 52 (orAux -> EL OR TL .)
    cierraparentesis reduce using rule 52 (orAux -> EL OR TL .)
    AND             shift and go to state 69


state 103

    (55) andAux -> TL AND C .

    AND             reduce using rule 55 (andAux -> TL AND C .)
    abrellave       reduce using rule 55 (andAux -> TL AND C .)
    OR              reduce using rule 55 (andAux -> TL AND C .)
    cierraparentesis reduce using rule 55 (andAux -> TL AND C .)


state 104

    (56) C -> abreparentesis EL cierraparentesis .

    AND             reduce using rule 56 (C -> abreparentesis EL cierraparentesis .)
    abrellave       reduce using rule 56 (C -> abreparentesis EL cierraparentesis .)
    OR              reduce using rule 56 (C -> abreparentesis EL cierraparentesis .)
    cierraparentesis reduce using rule 56 (C -> abreparentesis EL cierraparentesis .)
    puntoycoma      reduce using rule 56 (C -> abreparentesis EL cierraparentesis .)


state 105

    (58) Comp -> J W J .

    AND             reduce using rule 58 (Comp -> J W J .)
    abrellave       reduce using rule 58 (Comp -> J W J .)
    OR              reduce using rule 58 (Comp -> J W J .)
    cierraparentesis reduce using rule 58 (Comp -> J W J .)
    puntoycoma      reduce using rule 58 (Comp -> J W J .)


state 106

    (59) J -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 122
    coma            shift and go to state 60


state 107

    (20) S -> READ abreparentesis ID abreparentesis . A cierraparentesis cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 123

state 108

    (21) S -> PRINT abreparentesis M cierraparentesis .

    puntoycoma      reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)
    cierrallave     reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)


state 109

    (31) M -> comillasdobles K . comillasdobles

    comillasdobles  shift and go to state 124


state 110

    (22) S -> LET ID asignacion IF . abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    abreparentesis  shift and go to state 125


state 111

    (23) S -> WHILE C abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 126
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 112

    (24) S -> LOOP abrellave Z abreparentesis . C cierraparentesis B cierrallave
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    C                              shift and go to state 127
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 113

    (25) S -> FOR abreparentesis LET type . ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    ID              shift and go to state 128


state 114

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .

    FUNCTION        reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)
    BEGIN           reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)
    $end            reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)


state 115

    (46) X -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 129

state 116

    (38) expSuma -> E suma . T
    (40) T -> . expMult
    (41) T -> . expDiv
    (42) T -> . X
    (43) expMult -> . T multiplicacion X
    (44) expDiv -> . T dividir X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    T                              shift and go to state 130
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 117

    (39) expResta -> E resta . T
    (40) T -> . expMult
    (41) T -> . expDiv
    (42) T -> . X
    (43) expMult -> . T multiplicacion X
    (44) expDiv -> . T dividir X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    T                              shift and go to state 131
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 118

    (43) expMult -> T multiplicacion . X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    X                              shift and go to state 132
    IDaux                          shift and go to state 98

state 119

    (44) expDiv -> T dividir . X
    (45) X -> . IDaux
    (46) X -> . ID abreparentesis A cierraparentesis
    (47) X -> . num
    (48) X -> . abreparentesis E cierraparentesis
    (49) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    X                              shift and go to state 133
    IDaux                          shift and go to state 98

state 120

    (48) X -> abreparentesis E . cierraparentesis
    (38) expSuma -> E . suma T
    (39) expResta -> E . resta T

    cierraparentesis shift and go to state 134
    suma            shift and go to state 116
    resta           shift and go to state 117


state 121

    (19) S -> IF EL abrellave Z cierrallave . ELSE abrellave Z cierrallave

    ELSE            shift and go to state 135


state 122

    (59) J -> ID abreparentesis A cierraparentesis .

    mayorigual      reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    menorigual      reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    menor           reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    mayor           reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    igualque        reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    diferenteque    reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    AND             reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    abrellave       reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    OR              reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 59 (J -> ID abreparentesis A cierraparentesis .)


state 123

    (20) S -> READ abreparentesis ID abreparentesis A . cierraparentesis cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 136
    coma            shift and go to state 60


state 124

    (31) M -> comillasdobles K comillasdobles .

    cierraparentesis reduce using rule 31 (M -> comillasdobles K comillasdobles .)


state 125

    (22) S -> LET ID asignacion IF abreparentesis . C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    C                              shift and go to state 137
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 126

    (23) S -> WHILE C abrellave Z cierrallave .

    puntoycoma      reduce using rule 23 (S -> WHILE C abrellave Z cierrallave .)
    cierrallave     reduce using rule 23 (S -> WHILE C abrellave Z cierrallave .)


state 127

    (24) S -> LOOP abrellave Z abreparentesis C . cierraparentesis B cierrallave

    cierraparentesis shift and go to state 138


state 128

    (25) S -> FOR abreparentesis LET type ID . asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    asignacion      shift and go to state 139


state 129

    (46) X -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 140
    coma            shift and go to state 60


state 130

    (38) expSuma -> E suma T .
    (43) expMult -> T . multiplicacion X
    (44) expDiv -> T . dividir X

    suma            reduce using rule 38 (expSuma -> E suma T .)
    resta           reduce using rule 38 (expSuma -> E suma T .)
    puntoycoma      reduce using rule 38 (expSuma -> E suma T .)
    cierrallave     reduce using rule 38 (expSuma -> E suma T .)
    cierraparentesis reduce using rule 38 (expSuma -> E suma T .)
    multiplicacion  shift and go to state 118
    dividir         shift and go to state 119


state 131

    (39) expResta -> E resta T .
    (43) expMult -> T . multiplicacion X
    (44) expDiv -> T . dividir X

    suma            reduce using rule 39 (expResta -> E resta T .)
    resta           reduce using rule 39 (expResta -> E resta T .)
    puntoycoma      reduce using rule 39 (expResta -> E resta T .)
    cierrallave     reduce using rule 39 (expResta -> E resta T .)
    cierraparentesis reduce using rule 39 (expResta -> E resta T .)
    multiplicacion  shift and go to state 118
    dividir         shift and go to state 119


state 132

    (43) expMult -> T multiplicacion X .

    multiplicacion  reduce using rule 43 (expMult -> T multiplicacion X .)
    dividir         reduce using rule 43 (expMult -> T multiplicacion X .)
    suma            reduce using rule 43 (expMult -> T multiplicacion X .)
    resta           reduce using rule 43 (expMult -> T multiplicacion X .)
    puntoycoma      reduce using rule 43 (expMult -> T multiplicacion X .)
    cierrallave     reduce using rule 43 (expMult -> T multiplicacion X .)
    cierraparentesis reduce using rule 43 (expMult -> T multiplicacion X .)


state 133

    (44) expDiv -> T dividir X .

    multiplicacion  reduce using rule 44 (expDiv -> T dividir X .)
    dividir         reduce using rule 44 (expDiv -> T dividir X .)
    suma            reduce using rule 44 (expDiv -> T dividir X .)
    resta           reduce using rule 44 (expDiv -> T dividir X .)
    puntoycoma      reduce using rule 44 (expDiv -> T dividir X .)
    cierrallave     reduce using rule 44 (expDiv -> T dividir X .)
    cierraparentesis reduce using rule 44 (expDiv -> T dividir X .)


state 134

    (48) X -> abreparentesis E cierraparentesis .

    multiplicacion  reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    dividir         reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    suma            reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    resta           reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    puntoycoma      reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    cierrallave     reduce using rule 48 (X -> abreparentesis E cierraparentesis .)
    cierraparentesis reduce using rule 48 (X -> abreparentesis E cierraparentesis .)


state 135

    (19) S -> IF EL abrellave Z cierrallave ELSE . abrellave Z cierrallave

    abrellave       shift and go to state 141


state 136

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis . cierraparentesis

    cierraparentesis shift and go to state 142


state 137

    (22) S -> LET ID asignacion IF abreparentesis C . cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    cierraparentesis shift and go to state 143


state 138

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis . B cierrallave
    (29) B -> . abrellave BREAK cierrallave
    (30) B -> .

    abrellave       shift and go to state 144
    cierrallave     reduce using rule 30 (B -> .)

    B                              shift and go to state 145

state 139

    (25) S -> FOR abreparentesis LET type ID asignacion . K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (14) K -> . ID
    (15) K -> . num

    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 146

state 140

    (46) X -> ID abreparentesis A cierraparentesis .

    multiplicacion  reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    dividir         reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    suma            reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    resta           reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    cierrallave     reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 46 (X -> ID abreparentesis A cierraparentesis .)


state 141

    (19) S -> IF EL abrellave Z cierrallave ELSE abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 147
    S                              shift and go to state 22

state 142

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .

    puntoycoma      reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)
    cierrallave     reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)


state 143

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis . abrellave Z cierrallave ELSE abrellave Z cierrallave

    abrellave       shift and go to state 148


state 144

    (29) B -> abrellave . BREAK cierrallave

    BREAK           shift and go to state 149


state 145

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis B . cierrallave

    cierrallave     shift and go to state 150


state 146

    (25) S -> FOR abreparentesis LET type ID asignacion K . puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    puntoycoma      shift and go to state 151


state 147

    (19) S -> IF EL abrellave Z cierrallave ELSE abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 152
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 148

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave . Z cierrallave ELSE abrellave Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 153
    S                              shift and go to state 22

state 149

    (29) B -> abrellave BREAK . cierrallave

    cierrallave     shift and go to state 154


state 150

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .

    puntoycoma      reduce using rule 24 (S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .)
    cierrallave     reduce using rule 24 (S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .)


state 151

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma . C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (56) C -> . abreparentesis EL cierraparentesis
    (57) C -> . Comp
    (58) Comp -> . J W J
    (59) J -> . ID abreparentesis A cierraparentesis
    (60) J -> . IDoux
    (61) J -> . num
    (62) IDoux -> . ID

    abreparentesis  shift and go to state 46
    ID              shift and go to state 49
    num             shift and go to state 51

    C                              shift and go to state 155
    Comp                           shift and go to state 47
    J                              shift and go to state 48
    IDoux                          shift and go to state 50

state 152

    (19) S -> IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave .

    puntoycoma      reduce using rule 19 (S -> IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave .)
    cierrallave     reduce using rule 19 (S -> IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave .)


state 153

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z . cierrallave ELSE abrellave Z cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 156
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 154

    (29) B -> abrellave BREAK cierrallave .

    cierrallave     reduce using rule 29 (B -> abrellave BREAK cierrallave .)


state 155

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C . puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    puntoycoma      shift and go to state 157


state 156

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave . ELSE abrellave Z cierrallave

    ELSE            shift and go to state 158


state 157

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma . ID suma num cierraparentesis abrellave Z cierrallave

    ID              shift and go to state 159


state 158

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE . abrellave Z cierrallave

    abrellave       shift and go to state 160


state 159

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID . suma num cierraparentesis abrellave Z cierrallave

    suma            shift and go to state 161


state 160

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 162
    S                              shift and go to state 22

state 161

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma . num cierraparentesis abrellave Z cierrallave

    num             shift and go to state 163


state 162

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 164
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 163

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num . cierraparentesis abrellave Z cierrallave

    cierraparentesis shift and go to state 165


state 164

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .

    puntoycoma      reduce using rule 22 (S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)
    cierrallave     reduce using rule 22 (S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)


state 165

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis . abrellave Z cierrallave

    abrellave       shift and go to state 166


state 166

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 167
    S                              shift and go to state 22

state 167

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 168
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 168

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .

    puntoycoma      reduce using rule 25 (S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .)
    cierrallave     reduce using rule 25 (S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .)

