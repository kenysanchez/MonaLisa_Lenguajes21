Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> V F Main
Rule 2     V -> V LET aux asignacion K puntoycoma
Rule 3     V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma
Rule 4     V -> <empty>
Rule 5     aux -> type ID
Rule 6     type -> INT
Rule 7     type -> FLT
Rule 8     A -> num
Rule 9     A -> A coma num
Rule 10    Main -> BEGIN puntoycoma Z END puntoycoma
Rule 11    Main -> <empty>
Rule 12    Z -> S puntoycoma
Rule 13    Z -> Z S puntoycoma
Rule 14    K -> ID
Rule 15    K -> num
Rule 16    F -> F FUNCTION ID abrellave S cierrallave
Rule 17    F -> <empty>
Rule 18    S -> ID abreparentesis cierraparentesis
Rule 19    S -> IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
Rule 20    S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
Rule 21    S -> PRINT abreparentesis M cierraparentesis
Rule 22    S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
Rule 23    S -> whileAux EL whileAux2 Z whileAux3
Rule 24    S -> LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
Rule 25    S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
Rule 26    S -> ID D asignacion E
Rule 27    S -> BREAK
Rule 28    S -> <empty>
Rule 29    ifAux -> abrellave
Rule 30    ifAux2 -> abrellave
Rule 31    ifAux3 -> cierrallave
Rule 32    whileAux -> WHILE
Rule 33    whileAux2 -> abrellave
Rule 34    whileAux3 -> cierrallave
Rule 35    forAux -> type ID
Rule 36    forAux2 -> num
Rule 37    forAux3 -> EL
Rule 38    forAux4 -> ID suma num
Rule 39    forAux5 -> cierrallave
Rule 40    B -> abrellave BREAK cierrallave
Rule 41    B -> <empty>
Rule 42    M -> comillasdobles K comillasdobles
Rule 43    M -> A
Rule 44    D -> abreparentesis A cierraparentesis
Rule 45    D -> <empty>
Rule 46    E -> expSuma
Rule 47    E -> expResta
Rule 48    E -> T
Rule 49    expSuma -> E suma T
Rule 50    expResta -> E resta T
Rule 51    T -> expMult
Rule 52    T -> expDiv
Rule 53    T -> X
Rule 54    expMult -> T multiplicacion X
Rule 55    expDiv -> T dividir X
Rule 56    X -> IDaux
Rule 57    X -> ID abreparentesis A cierraparentesis
Rule 58    X -> num
Rule 59    X -> abreparentesis E cierraparentesis
Rule 60    IDaux -> ID
Rule 61    EL -> AL
Rule 62    EL -> orAux
Rule 63    AL -> TL
Rule 64    AL -> andAux
Rule 65    orAux -> EL OR AL
Rule 66    andAux -> AL AND TL
Rule 67    TL -> abreparentesis EL cierraparentesis
Rule 68    TL -> Comp
Rule 69    Comp -> J W J
Rule 70    J -> num
Rule 71    J -> ID abreparentesis A cierraparentesis
Rule 72    J -> IDoux
Rule 73    IDoux -> ID
Rule 74    W -> mayorigual
Rule 75    W -> menorigual
Rule 76    W -> menor
Rule 77    W -> mayor
Rule 78    W -> igualque
Rule 79    W -> diferenteque

Terminals, with rules where they appear

AND                  : 66
BEGIN                : 10
BREAK                : 27 40
ELSE                 : 19 22
END                  : 10
FLT                  : 7
FOR                  : 25
FUNCTION             : 16
ID                   : 5 14 16 18 20 22 26 35 38 57 60 71 73
IF                   : 19 22
INT                  : 6
LET                  : 2 3 22 25
LOOP                 : 24
OR                   : 65
PRINT                : 21
READ                 : 20
WHILE                : 32
abrellave            : 16 22 22 24 25 29 30 33 40
abreparentesis       : 3 18 20 20 21 22 24 25 44 57 59 67 71
asignacion           : 2 3 22 25 26
cierrallave          : 16 19 22 22 24 31 34 39 40
cierraparentesis     : 3 18 20 20 21 22 24 25 44 57 59 67 71
coma                 : 9
comillasdobles       : 42 42
diferenteque         : 79
dividir              : 55
error                : 
igualque             : 78
mayor                : 77
mayorigual           : 74
menor                : 76
menorigual           : 75
multiplicacion       : 54
num                  : 8 9 15 36 38 58 70
puntoycoma           : 2 3 10 10 12 13 25 25
resta                : 50
suma                 : 38 49

Nonterminals, with rules where they appear

A                    : 3 9 20 43 44 57 71
AL                   : 61 65 66
B                    : 24
Comp                 : 68
D                    : 26
E                    : 26 49 50 59
EL                   : 19 22 23 24 37 65 67
F                    : 1 16
IDaux                : 56
IDoux                : 72
J                    : 69 69
K                    : 2 42
M                    : 21
Main                 : 1
Programa             : 0
S                    : 12 13 16
T                    : 48 49 50 54 55
TL                   : 63 66
V                    : 1 2 3
W                    : 69
X                    : 53 54 55
Z                    : 10 13 19 19 22 22 23 24 25
andAux               : 64
aux                  : 2 3
expDiv               : 52
expMult              : 51
expResta             : 47
expSuma              : 46
forAux               : 25
forAux2              : 25
forAux3              : 25
forAux4              : 25
forAux5              : 25
ifAux                : 19
ifAux2               : 19
ifAux3               : 19
orAux                : 62
type                 : 5 35
whileAux             : 23
whileAux2            : 23
whileAux3            : 23

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . V F Main
    (2) V -> . V LET aux asignacion K puntoycoma
    (3) V -> . V LET aux asignacion abreparentesis A cierraparentesis puntoycoma
    (4) V -> .

    LET             reduce using rule 4 (V -> .)
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    Programa                       shift and go to state 1
    V                              shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> V . F Main
    (2) V -> V . LET aux asignacion K puntoycoma
    (3) V -> V . LET aux asignacion abreparentesis A cierraparentesis puntoycoma
    (16) F -> . F FUNCTION ID abrellave S cierrallave
    (17) F -> .

    LET             shift and go to state 4
    FUNCTION        reduce using rule 17 (F -> .)
    BEGIN           reduce using rule 17 (F -> .)
    $end            reduce using rule 17 (F -> .)

    F                              shift and go to state 3

state 3

    (1) Programa -> V F . Main
    (16) F -> F . FUNCTION ID abrellave S cierrallave
    (10) Main -> . BEGIN puntoycoma Z END puntoycoma
    (11) Main -> .

    FUNCTION        shift and go to state 6
    BEGIN           shift and go to state 7
    $end            reduce using rule 11 (Main -> .)

    Main                           shift and go to state 5

state 4

    (2) V -> V LET . aux asignacion K puntoycoma
    (3) V -> V LET . aux asignacion abreparentesis A cierraparentesis puntoycoma
    (5) aux -> . type ID
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 10
    FLT             shift and go to state 11

    aux                            shift and go to state 8
    type                           shift and go to state 9

state 5

    (1) Programa -> V F Main .

    $end            reduce using rule 1 (Programa -> V F Main .)


state 6

    (16) F -> F FUNCTION . ID abrellave S cierrallave

    ID              shift and go to state 12


state 7

    (10) Main -> BEGIN . puntoycoma Z END puntoycoma

    puntoycoma      shift and go to state 13


state 8

    (2) V -> V LET aux . asignacion K puntoycoma
    (3) V -> V LET aux . asignacion abreparentesis A cierraparentesis puntoycoma

    asignacion      shift and go to state 14


state 9

    (5) aux -> type . ID

    ID              shift and go to state 15


state 10

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 11

    (7) type -> FLT .

    ID              reduce using rule 7 (type -> FLT .)


state 12

    (16) F -> F FUNCTION ID . abrellave S cierrallave

    abrellave       shift and go to state 16


state 13

    (10) Main -> BEGIN puntoycoma . Z END puntoycoma
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 17
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 14

    (2) V -> V LET aux asignacion . K puntoycoma
    (3) V -> V LET aux asignacion . abreparentesis A cierraparentesis puntoycoma
    (14) K -> . ID
    (15) K -> . num

    abreparentesis  shift and go to state 30
    ID              shift and go to state 31
    num             shift and go to state 32

    K                              shift and go to state 29

state 15

    (5) aux -> type ID .

    asignacion      reduce using rule 5 (aux -> type ID .)


state 16

    (16) F -> F FUNCTION ID abrellave . S cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    cierrallave     reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 33
    whileAux                       shift and go to state 24

state 17

    (10) Main -> BEGIN puntoycoma Z . END puntoycoma
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    END             shift and go to state 34
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 18

    (12) Z -> S . puntoycoma

    puntoycoma      shift and go to state 36


state 19

    (18) S -> ID . abreparentesis cierraparentesis
    (26) S -> ID . D asignacion E
    (44) D -> . abreparentesis A cierraparentesis
    (45) D -> .

    abreparentesis  shift and go to state 37
    asignacion      reduce using rule 45 (D -> .)

    D                              shift and go to state 38

state 20

    (19) S -> IF . EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    EL                             shift and go to state 39
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 21

    (20) S -> READ . abreparentesis ID abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 50


state 22

    (21) S -> PRINT . abreparentesis M cierraparentesis

    abreparentesis  shift and go to state 51


state 23

    (22) S -> LET . ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    ID              shift and go to state 52


state 24

    (23) S -> whileAux . EL whileAux2 Z whileAux3
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    EL                             shift and go to state 53
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 25

    (24) S -> LOOP . abrellave Z abreparentesis EL cierraparentesis B cierrallave

    abrellave       shift and go to state 54


state 26

    (25) S -> FOR . abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5

    abreparentesis  shift and go to state 55


state 27

    (27) S -> BREAK .

    puntoycoma      reduce using rule 27 (S -> BREAK .)
    cierrallave     reduce using rule 27 (S -> BREAK .)


state 28

    (32) whileAux -> WHILE .

    abreparentesis  reduce using rule 32 (whileAux -> WHILE .)
    num             reduce using rule 32 (whileAux -> WHILE .)
    ID              reduce using rule 32 (whileAux -> WHILE .)


state 29

    (2) V -> V LET aux asignacion K . puntoycoma

    puntoycoma      shift and go to state 56


state 30

    (3) V -> V LET aux asignacion abreparentesis . A cierraparentesis puntoycoma
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 58

    A                              shift and go to state 57

state 31

    (14) K -> ID .

    puntoycoma      reduce using rule 14 (K -> ID .)
    comillasdobles  reduce using rule 14 (K -> ID .)


state 32

    (15) K -> num .

    puntoycoma      reduce using rule 15 (K -> num .)
    comillasdobles  reduce using rule 15 (K -> num .)


state 33

    (16) F -> F FUNCTION ID abrellave S . cierrallave

    cierrallave     shift and go to state 59


state 34

    (10) Main -> BEGIN puntoycoma Z END . puntoycoma

    puntoycoma      shift and go to state 60


state 35

    (13) Z -> Z S . puntoycoma

    puntoycoma      shift and go to state 61


state 36

    (12) Z -> S puntoycoma .

    END             reduce using rule 12 (Z -> S puntoycoma .)
    ID              reduce using rule 12 (Z -> S puntoycoma .)
    IF              reduce using rule 12 (Z -> S puntoycoma .)
    READ            reduce using rule 12 (Z -> S puntoycoma .)
    PRINT           reduce using rule 12 (Z -> S puntoycoma .)
    LET             reduce using rule 12 (Z -> S puntoycoma .)
    LOOP            reduce using rule 12 (Z -> S puntoycoma .)
    FOR             reduce using rule 12 (Z -> S puntoycoma .)
    BREAK           reduce using rule 12 (Z -> S puntoycoma .)
    WHILE           reduce using rule 12 (Z -> S puntoycoma .)
    puntoycoma      reduce using rule 12 (Z -> S puntoycoma .)
    abreparentesis  reduce using rule 12 (Z -> S puntoycoma .)
    cierrallave     reduce using rule 12 (Z -> S puntoycoma .)


state 37

    (18) S -> ID abreparentesis . cierraparentesis
    (44) D -> abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    cierraparentesis shift and go to state 62
    num             shift and go to state 58

    A                              shift and go to state 63

state 38

    (26) S -> ID D . asignacion E

    asignacion      shift and go to state 64


state 39

    (19) S -> IF EL . ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (65) orAux -> EL . OR AL
    (29) ifAux -> . abrellave

    OR              shift and go to state 66
    abrellave       shift and go to state 67

    ifAux                          shift and go to state 65

state 40

    (61) EL -> AL .
    (66) andAux -> AL . AND TL

    OR              reduce using rule 61 (EL -> AL .)
    abrellave       reduce using rule 61 (EL -> AL .)
    cierraparentesis reduce using rule 61 (EL -> AL .)
    puntoycoma      reduce using rule 61 (EL -> AL .)
    AND             shift and go to state 68


state 41

    (62) EL -> orAux .

    OR              reduce using rule 62 (EL -> orAux .)
    abrellave       reduce using rule 62 (EL -> orAux .)
    cierraparentesis reduce using rule 62 (EL -> orAux .)
    puntoycoma      reduce using rule 62 (EL -> orAux .)


state 42

    (63) AL -> TL .

    AND             reduce using rule 63 (AL -> TL .)
    OR              reduce using rule 63 (AL -> TL .)
    abrellave       reduce using rule 63 (AL -> TL .)
    cierraparentesis reduce using rule 63 (AL -> TL .)
    puntoycoma      reduce using rule 63 (AL -> TL .)


state 43

    (64) AL -> andAux .

    AND             reduce using rule 64 (AL -> andAux .)
    OR              reduce using rule 64 (AL -> andAux .)
    abrellave       reduce using rule 64 (AL -> andAux .)
    cierraparentesis reduce using rule 64 (AL -> andAux .)
    puntoycoma      reduce using rule 64 (AL -> andAux .)


state 44

    (67) TL -> abreparentesis . EL cierraparentesis
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    EL                             shift and go to state 69
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 45

    (68) TL -> Comp .

    AND             reduce using rule 68 (TL -> Comp .)
    OR              reduce using rule 68 (TL -> Comp .)
    abrellave       reduce using rule 68 (TL -> Comp .)
    cierraparentesis reduce using rule 68 (TL -> Comp .)
    puntoycoma      reduce using rule 68 (TL -> Comp .)


state 46

    (69) Comp -> J . W J
    (74) W -> . mayorigual
    (75) W -> . menorigual
    (76) W -> . menor
    (77) W -> . mayor
    (78) W -> . igualque
    (79) W -> . diferenteque

    mayorigual      shift and go to state 71
    menorigual      shift and go to state 72
    menor           shift and go to state 73
    mayor           shift and go to state 74
    igualque        shift and go to state 75
    diferenteque    shift and go to state 76

    W                              shift and go to state 70

state 47

    (70) J -> num .

    mayorigual      reduce using rule 70 (J -> num .)
    menorigual      reduce using rule 70 (J -> num .)
    menor           reduce using rule 70 (J -> num .)
    mayor           reduce using rule 70 (J -> num .)
    igualque        reduce using rule 70 (J -> num .)
    diferenteque    reduce using rule 70 (J -> num .)
    AND             reduce using rule 70 (J -> num .)
    OR              reduce using rule 70 (J -> num .)
    abrellave       reduce using rule 70 (J -> num .)
    cierraparentesis reduce using rule 70 (J -> num .)
    puntoycoma      reduce using rule 70 (J -> num .)


state 48

    (71) J -> ID . abreparentesis A cierraparentesis
    (73) IDoux -> ID .

    abreparentesis  shift and go to state 77
    mayorigual      reduce using rule 73 (IDoux -> ID .)
    menorigual      reduce using rule 73 (IDoux -> ID .)
    menor           reduce using rule 73 (IDoux -> ID .)
    mayor           reduce using rule 73 (IDoux -> ID .)
    igualque        reduce using rule 73 (IDoux -> ID .)
    diferenteque    reduce using rule 73 (IDoux -> ID .)
    AND             reduce using rule 73 (IDoux -> ID .)
    OR              reduce using rule 73 (IDoux -> ID .)
    abrellave       reduce using rule 73 (IDoux -> ID .)
    cierraparentesis reduce using rule 73 (IDoux -> ID .)
    puntoycoma      reduce using rule 73 (IDoux -> ID .)


state 49

    (72) J -> IDoux .

    mayorigual      reduce using rule 72 (J -> IDoux .)
    menorigual      reduce using rule 72 (J -> IDoux .)
    menor           reduce using rule 72 (J -> IDoux .)
    mayor           reduce using rule 72 (J -> IDoux .)
    igualque        reduce using rule 72 (J -> IDoux .)
    diferenteque    reduce using rule 72 (J -> IDoux .)
    AND             reduce using rule 72 (J -> IDoux .)
    OR              reduce using rule 72 (J -> IDoux .)
    abrellave       reduce using rule 72 (J -> IDoux .)
    cierraparentesis reduce using rule 72 (J -> IDoux .)
    puntoycoma      reduce using rule 72 (J -> IDoux .)


state 50

    (20) S -> READ abreparentesis . ID abreparentesis A cierraparentesis cierraparentesis

    ID              shift and go to state 78


state 51

    (21) S -> PRINT abreparentesis . M cierraparentesis
    (42) M -> . comillasdobles K comillasdobles
    (43) M -> . A
    (8) A -> . num
    (9) A -> . A coma num

    comillasdobles  shift and go to state 80
    num             shift and go to state 58

    M                              shift and go to state 79
    A                              shift and go to state 81

state 52

    (22) S -> LET ID . asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    asignacion      shift and go to state 82


state 53

    (23) S -> whileAux EL . whileAux2 Z whileAux3
    (65) orAux -> EL . OR AL
    (33) whileAux2 -> . abrellave

    OR              shift and go to state 66
    abrellave       shift and go to state 84

    whileAux2                      shift and go to state 83

state 54

    (24) S -> LOOP abrellave . Z abreparentesis EL cierraparentesis B cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 85
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 55

    (25) S -> FOR abreparentesis . LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5

    LET             shift and go to state 86


state 56

    (2) V -> V LET aux asignacion K puntoycoma .

    LET             reduce using rule 2 (V -> V LET aux asignacion K puntoycoma .)
    FUNCTION        reduce using rule 2 (V -> V LET aux asignacion K puntoycoma .)
    BEGIN           reduce using rule 2 (V -> V LET aux asignacion K puntoycoma .)
    $end            reduce using rule 2 (V -> V LET aux asignacion K puntoycoma .)


state 57

    (3) V -> V LET aux asignacion abreparentesis A . cierraparentesis puntoycoma
    (9) A -> A . coma num

    cierraparentesis shift and go to state 87
    coma            shift and go to state 88


state 58

    (8) A -> num .

    cierraparentesis reduce using rule 8 (A -> num .)
    coma            reduce using rule 8 (A -> num .)


state 59

    (16) F -> F FUNCTION ID abrellave S cierrallave .

    FUNCTION        reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    BEGIN           reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    $end            reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)


state 60

    (10) Main -> BEGIN puntoycoma Z END puntoycoma .

    $end            reduce using rule 10 (Main -> BEGIN puntoycoma Z END puntoycoma .)


state 61

    (13) Z -> Z S puntoycoma .

    END             reduce using rule 13 (Z -> Z S puntoycoma .)
    ID              reduce using rule 13 (Z -> Z S puntoycoma .)
    IF              reduce using rule 13 (Z -> Z S puntoycoma .)
    READ            reduce using rule 13 (Z -> Z S puntoycoma .)
    PRINT           reduce using rule 13 (Z -> Z S puntoycoma .)
    LET             reduce using rule 13 (Z -> Z S puntoycoma .)
    LOOP            reduce using rule 13 (Z -> Z S puntoycoma .)
    FOR             reduce using rule 13 (Z -> Z S puntoycoma .)
    BREAK           reduce using rule 13 (Z -> Z S puntoycoma .)
    WHILE           reduce using rule 13 (Z -> Z S puntoycoma .)
    puntoycoma      reduce using rule 13 (Z -> Z S puntoycoma .)
    abreparentesis  reduce using rule 13 (Z -> Z S puntoycoma .)
    cierrallave     reduce using rule 13 (Z -> Z S puntoycoma .)


state 62

    (18) S -> ID abreparentesis cierraparentesis .

    puntoycoma      reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)
    cierrallave     reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)


state 63

    (44) D -> abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 89
    coma            shift and go to state 88


state 64

    (26) S -> ID D asignacion . E
    (46) E -> . expSuma
    (47) E -> . expResta
    (48) E -> . T
    (49) expSuma -> . E suma T
    (50) expResta -> . E resta T
    (51) T -> . expMult
    (52) T -> . expDiv
    (53) T -> . X
    (54) expMult -> . T multiplicacion X
    (55) expDiv -> . T dividir X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    E                              shift and go to state 91
    expSuma                        shift and go to state 92
    expResta                       shift and go to state 93
    T                              shift and go to state 94
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 65

    (19) S -> IF EL ifAux . Z cierrallave ELSE ifAux2 Z ifAux3
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 101
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 66

    (65) orAux -> EL OR . AL
    (63) AL -> . TL
    (64) AL -> . andAux
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    AL                             shift and go to state 102
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 67

    (29) ifAux -> abrellave .

    ID              reduce using rule 29 (ifAux -> abrellave .)
    IF              reduce using rule 29 (ifAux -> abrellave .)
    READ            reduce using rule 29 (ifAux -> abrellave .)
    PRINT           reduce using rule 29 (ifAux -> abrellave .)
    LET             reduce using rule 29 (ifAux -> abrellave .)
    LOOP            reduce using rule 29 (ifAux -> abrellave .)
    FOR             reduce using rule 29 (ifAux -> abrellave .)
    BREAK           reduce using rule 29 (ifAux -> abrellave .)
    WHILE           reduce using rule 29 (ifAux -> abrellave .)
    puntoycoma      reduce using rule 29 (ifAux -> abrellave .)


state 68

    (66) andAux -> AL AND . TL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    TL                             shift and go to state 103
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 69

    (67) TL -> abreparentesis EL . cierraparentesis
    (65) orAux -> EL . OR AL

    cierraparentesis shift and go to state 104
    OR              shift and go to state 66


state 70

    (69) Comp -> J W . J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    num             shift and go to state 47
    ID              shift and go to state 48

    J                              shift and go to state 105
    IDoux                          shift and go to state 49

state 71

    (74) W -> mayorigual .

    num             reduce using rule 74 (W -> mayorigual .)
    ID              reduce using rule 74 (W -> mayorigual .)


state 72

    (75) W -> menorigual .

    num             reduce using rule 75 (W -> menorigual .)
    ID              reduce using rule 75 (W -> menorigual .)


state 73

    (76) W -> menor .

    num             reduce using rule 76 (W -> menor .)
    ID              reduce using rule 76 (W -> menor .)


state 74

    (77) W -> mayor .

    num             reduce using rule 77 (W -> mayor .)
    ID              reduce using rule 77 (W -> mayor .)


state 75

    (78) W -> igualque .

    num             reduce using rule 78 (W -> igualque .)
    ID              reduce using rule 78 (W -> igualque .)


state 76

    (79) W -> diferenteque .

    num             reduce using rule 79 (W -> diferenteque .)
    ID              reduce using rule 79 (W -> diferenteque .)


state 77

    (71) J -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 58

    A                              shift and go to state 106

state 78

    (20) S -> READ abreparentesis ID . abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 107


state 79

    (21) S -> PRINT abreparentesis M . cierraparentesis

    cierraparentesis shift and go to state 108


state 80

    (42) M -> comillasdobles . K comillasdobles
    (14) K -> . ID
    (15) K -> . num

    ID              shift and go to state 31
    num             shift and go to state 32

    K                              shift and go to state 109

state 81

    (43) M -> A .
    (9) A -> A . coma num

    cierraparentesis reduce using rule 43 (M -> A .)
    coma            shift and go to state 88


state 82

    (22) S -> LET ID asignacion . IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    IF              shift and go to state 110


state 83

    (23) S -> whileAux EL whileAux2 . Z whileAux3
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    whileAux                       shift and go to state 24
    Z                              shift and go to state 111
    S                              shift and go to state 18

state 84

    (33) whileAux2 -> abrellave .

    ID              reduce using rule 33 (whileAux2 -> abrellave .)
    IF              reduce using rule 33 (whileAux2 -> abrellave .)
    READ            reduce using rule 33 (whileAux2 -> abrellave .)
    PRINT           reduce using rule 33 (whileAux2 -> abrellave .)
    LET             reduce using rule 33 (whileAux2 -> abrellave .)
    LOOP            reduce using rule 33 (whileAux2 -> abrellave .)
    FOR             reduce using rule 33 (whileAux2 -> abrellave .)
    BREAK           reduce using rule 33 (whileAux2 -> abrellave .)
    WHILE           reduce using rule 33 (whileAux2 -> abrellave .)
    puntoycoma      reduce using rule 33 (whileAux2 -> abrellave .)


state 85

    (24) S -> LOOP abrellave Z . abreparentesis EL cierraparentesis B cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    abreparentesis  shift and go to state 112
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 86

    (25) S -> FOR abreparentesis LET . forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (35) forAux -> . type ID
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 10
    FLT             shift and go to state 11

    forAux                         shift and go to state 113
    type                           shift and go to state 114

state 87

    (3) V -> V LET aux asignacion abreparentesis A cierraparentesis . puntoycoma

    puntoycoma      shift and go to state 115


state 88

    (9) A -> A coma . num

    num             shift and go to state 116


state 89

    (44) D -> abreparentesis A cierraparentesis .

    asignacion      reduce using rule 44 (D -> abreparentesis A cierraparentesis .)


state 90

    (57) X -> ID . abreparentesis A cierraparentesis
    (60) IDaux -> ID .

    abreparentesis  shift and go to state 117
    multiplicacion  reduce using rule 60 (IDaux -> ID .)
    dividir         reduce using rule 60 (IDaux -> ID .)
    suma            reduce using rule 60 (IDaux -> ID .)
    resta           reduce using rule 60 (IDaux -> ID .)
    puntoycoma      reduce using rule 60 (IDaux -> ID .)
    cierrallave     reduce using rule 60 (IDaux -> ID .)
    cierraparentesis reduce using rule 60 (IDaux -> ID .)


state 91

    (26) S -> ID D asignacion E .
    (49) expSuma -> E . suma T
    (50) expResta -> E . resta T

    puntoycoma      reduce using rule 26 (S -> ID D asignacion E .)
    cierrallave     reduce using rule 26 (S -> ID D asignacion E .)
    suma            shift and go to state 118
    resta           shift and go to state 119


state 92

    (46) E -> expSuma .

    suma            reduce using rule 46 (E -> expSuma .)
    resta           reduce using rule 46 (E -> expSuma .)
    puntoycoma      reduce using rule 46 (E -> expSuma .)
    cierrallave     reduce using rule 46 (E -> expSuma .)
    cierraparentesis reduce using rule 46 (E -> expSuma .)


state 93

    (47) E -> expResta .

    suma            reduce using rule 47 (E -> expResta .)
    resta           reduce using rule 47 (E -> expResta .)
    puntoycoma      reduce using rule 47 (E -> expResta .)
    cierrallave     reduce using rule 47 (E -> expResta .)
    cierraparentesis reduce using rule 47 (E -> expResta .)


state 94

    (48) E -> T .
    (54) expMult -> T . multiplicacion X
    (55) expDiv -> T . dividir X

    suma            reduce using rule 48 (E -> T .)
    resta           reduce using rule 48 (E -> T .)
    puntoycoma      reduce using rule 48 (E -> T .)
    cierrallave     reduce using rule 48 (E -> T .)
    cierraparentesis reduce using rule 48 (E -> T .)
    multiplicacion  shift and go to state 120
    dividir         shift and go to state 121


state 95

    (51) T -> expMult .

    multiplicacion  reduce using rule 51 (T -> expMult .)
    dividir         reduce using rule 51 (T -> expMult .)
    suma            reduce using rule 51 (T -> expMult .)
    resta           reduce using rule 51 (T -> expMult .)
    puntoycoma      reduce using rule 51 (T -> expMult .)
    cierrallave     reduce using rule 51 (T -> expMult .)
    cierraparentesis reduce using rule 51 (T -> expMult .)


state 96

    (52) T -> expDiv .

    multiplicacion  reduce using rule 52 (T -> expDiv .)
    dividir         reduce using rule 52 (T -> expDiv .)
    suma            reduce using rule 52 (T -> expDiv .)
    resta           reduce using rule 52 (T -> expDiv .)
    puntoycoma      reduce using rule 52 (T -> expDiv .)
    cierrallave     reduce using rule 52 (T -> expDiv .)
    cierraparentesis reduce using rule 52 (T -> expDiv .)


state 97

    (53) T -> X .

    multiplicacion  reduce using rule 53 (T -> X .)
    dividir         reduce using rule 53 (T -> X .)
    suma            reduce using rule 53 (T -> X .)
    resta           reduce using rule 53 (T -> X .)
    puntoycoma      reduce using rule 53 (T -> X .)
    cierrallave     reduce using rule 53 (T -> X .)
    cierraparentesis reduce using rule 53 (T -> X .)


state 98

    (56) X -> IDaux .

    multiplicacion  reduce using rule 56 (X -> IDaux .)
    dividir         reduce using rule 56 (X -> IDaux .)
    suma            reduce using rule 56 (X -> IDaux .)
    resta           reduce using rule 56 (X -> IDaux .)
    puntoycoma      reduce using rule 56 (X -> IDaux .)
    cierrallave     reduce using rule 56 (X -> IDaux .)
    cierraparentesis reduce using rule 56 (X -> IDaux .)


state 99

    (59) X -> abreparentesis . E cierraparentesis
    (46) E -> . expSuma
    (47) E -> . expResta
    (48) E -> . T
    (49) expSuma -> . E suma T
    (50) expResta -> . E resta T
    (51) T -> . expMult
    (52) T -> . expDiv
    (53) T -> . X
    (54) expMult -> . T multiplicacion X
    (55) expDiv -> . T dividir X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    E                              shift and go to state 122
    expSuma                        shift and go to state 92
    expResta                       shift and go to state 93
    T                              shift and go to state 94
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 100

    (58) X -> num .

    multiplicacion  reduce using rule 58 (X -> num .)
    dividir         reduce using rule 58 (X -> num .)
    suma            reduce using rule 58 (X -> num .)
    resta           reduce using rule 58 (X -> num .)
    puntoycoma      reduce using rule 58 (X -> num .)
    cierrallave     reduce using rule 58 (X -> num .)
    cierraparentesis reduce using rule 58 (X -> num .)


state 101

    (19) S -> IF EL ifAux Z . cierrallave ELSE ifAux2 Z ifAux3
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 123
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 102

    (65) orAux -> EL OR AL .
    (66) andAux -> AL . AND TL

    OR              reduce using rule 65 (orAux -> EL OR AL .)
    abrellave       reduce using rule 65 (orAux -> EL OR AL .)
    cierraparentesis reduce using rule 65 (orAux -> EL OR AL .)
    puntoycoma      reduce using rule 65 (orAux -> EL OR AL .)
    AND             shift and go to state 68


state 103

    (66) andAux -> AL AND TL .

    AND             reduce using rule 66 (andAux -> AL AND TL .)
    OR              reduce using rule 66 (andAux -> AL AND TL .)
    abrellave       reduce using rule 66 (andAux -> AL AND TL .)
    cierraparentesis reduce using rule 66 (andAux -> AL AND TL .)
    puntoycoma      reduce using rule 66 (andAux -> AL AND TL .)


state 104

    (67) TL -> abreparentesis EL cierraparentesis .

    AND             reduce using rule 67 (TL -> abreparentesis EL cierraparentesis .)
    OR              reduce using rule 67 (TL -> abreparentesis EL cierraparentesis .)
    abrellave       reduce using rule 67 (TL -> abreparentesis EL cierraparentesis .)
    cierraparentesis reduce using rule 67 (TL -> abreparentesis EL cierraparentesis .)
    puntoycoma      reduce using rule 67 (TL -> abreparentesis EL cierraparentesis .)


state 105

    (69) Comp -> J W J .

    AND             reduce using rule 69 (Comp -> J W J .)
    OR              reduce using rule 69 (Comp -> J W J .)
    abrellave       reduce using rule 69 (Comp -> J W J .)
    cierraparentesis reduce using rule 69 (Comp -> J W J .)
    puntoycoma      reduce using rule 69 (Comp -> J W J .)


state 106

    (71) J -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 124
    coma            shift and go to state 88


state 107

    (20) S -> READ abreparentesis ID abreparentesis . A cierraparentesis cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 58

    A                              shift and go to state 125

state 108

    (21) S -> PRINT abreparentesis M cierraparentesis .

    puntoycoma      reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)
    cierrallave     reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)


state 109

    (42) M -> comillasdobles K . comillasdobles

    comillasdobles  shift and go to state 126


state 110

    (22) S -> LET ID asignacion IF . abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    abreparentesis  shift and go to state 127


state 111

    (23) S -> whileAux EL whileAux2 Z . whileAux3
    (13) Z -> Z . S puntoycoma
    (34) whileAux3 -> . cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 129
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    whileAux                       shift and go to state 24
    whileAux3                      shift and go to state 128
    S                              shift and go to state 35

state 112

    (24) S -> LOOP abrellave Z abreparentesis . EL cierraparentesis B cierrallave
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    EL                             shift and go to state 130
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 113

    (25) S -> FOR abreparentesis LET forAux . asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5

    asignacion      shift and go to state 131


state 114

    (35) forAux -> type . ID

    ID              shift and go to state 132


state 115

    (3) V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma .

    LET             reduce using rule 3 (V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma .)
    FUNCTION        reduce using rule 3 (V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma .)
    BEGIN           reduce using rule 3 (V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma .)
    $end            reduce using rule 3 (V -> V LET aux asignacion abreparentesis A cierraparentesis puntoycoma .)


state 116

    (9) A -> A coma num .

    cierraparentesis reduce using rule 9 (A -> A coma num .)
    coma            reduce using rule 9 (A -> A coma num .)


state 117

    (57) X -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 58

    A                              shift and go to state 133

state 118

    (49) expSuma -> E suma . T
    (51) T -> . expMult
    (52) T -> . expDiv
    (53) T -> . X
    (54) expMult -> . T multiplicacion X
    (55) expDiv -> . T dividir X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    T                              shift and go to state 134
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 119

    (50) expResta -> E resta . T
    (51) T -> . expMult
    (52) T -> . expDiv
    (53) T -> . X
    (54) expMult -> . T multiplicacion X
    (55) expDiv -> . T dividir X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    T                              shift and go to state 135
    expMult                        shift and go to state 95
    expDiv                         shift and go to state 96
    X                              shift and go to state 97
    IDaux                          shift and go to state 98

state 120

    (54) expMult -> T multiplicacion . X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    X                              shift and go to state 136
    IDaux                          shift and go to state 98

state 121

    (55) expDiv -> T dividir . X
    (56) X -> . IDaux
    (57) X -> . ID abreparentesis A cierraparentesis
    (58) X -> . num
    (59) X -> . abreparentesis E cierraparentesis
    (60) IDaux -> . ID

    ID              shift and go to state 90
    num             shift and go to state 100
    abreparentesis  shift and go to state 99

    X                              shift and go to state 137
    IDaux                          shift and go to state 98

state 122

    (59) X -> abreparentesis E . cierraparentesis
    (49) expSuma -> E . suma T
    (50) expResta -> E . resta T

    cierraparentesis shift and go to state 138
    suma            shift and go to state 118
    resta           shift and go to state 119


state 123

    (19) S -> IF EL ifAux Z cierrallave . ELSE ifAux2 Z ifAux3

    ELSE            shift and go to state 139


state 124

    (71) J -> ID abreparentesis A cierraparentesis .

    mayorigual      reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    menorigual      reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    menor           reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    mayor           reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    igualque        reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    diferenteque    reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    AND             reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    OR              reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    abrellave       reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 71 (J -> ID abreparentesis A cierraparentesis .)


state 125

    (20) S -> READ abreparentesis ID abreparentesis A . cierraparentesis cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 140
    coma            shift and go to state 88


state 126

    (42) M -> comillasdobles K comillasdobles .

    cierraparentesis reduce using rule 42 (M -> comillasdobles K comillasdobles .)


state 127

    (22) S -> LET ID asignacion IF abreparentesis . EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    EL                             shift and go to state 141
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 128

    (23) S -> whileAux EL whileAux2 Z whileAux3 .

    puntoycoma      reduce using rule 23 (S -> whileAux EL whileAux2 Z whileAux3 .)
    cierrallave     reduce using rule 23 (S -> whileAux EL whileAux2 Z whileAux3 .)


state 129

    (34) whileAux3 -> cierrallave .

    puntoycoma      reduce using rule 34 (whileAux3 -> cierrallave .)
    cierrallave     reduce using rule 34 (whileAux3 -> cierrallave .)


state 130

    (24) S -> LOOP abrellave Z abreparentesis EL . cierraparentesis B cierrallave
    (65) orAux -> EL . OR AL

    cierraparentesis shift and go to state 142
    OR              shift and go to state 66


state 131

    (25) S -> FOR abreparentesis LET forAux asignacion . forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (36) forAux2 -> . num

    num             shift and go to state 144

    forAux2                        shift and go to state 143

state 132

    (35) forAux -> type ID .

    asignacion      reduce using rule 35 (forAux -> type ID .)


state 133

    (57) X -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 145
    coma            shift and go to state 88


state 134

    (49) expSuma -> E suma T .
    (54) expMult -> T . multiplicacion X
    (55) expDiv -> T . dividir X

    suma            reduce using rule 49 (expSuma -> E suma T .)
    resta           reduce using rule 49 (expSuma -> E suma T .)
    puntoycoma      reduce using rule 49 (expSuma -> E suma T .)
    cierrallave     reduce using rule 49 (expSuma -> E suma T .)
    cierraparentesis reduce using rule 49 (expSuma -> E suma T .)
    multiplicacion  shift and go to state 120
    dividir         shift and go to state 121


state 135

    (50) expResta -> E resta T .
    (54) expMult -> T . multiplicacion X
    (55) expDiv -> T . dividir X

    suma            reduce using rule 50 (expResta -> E resta T .)
    resta           reduce using rule 50 (expResta -> E resta T .)
    puntoycoma      reduce using rule 50 (expResta -> E resta T .)
    cierrallave     reduce using rule 50 (expResta -> E resta T .)
    cierraparentesis reduce using rule 50 (expResta -> E resta T .)
    multiplicacion  shift and go to state 120
    dividir         shift and go to state 121


state 136

    (54) expMult -> T multiplicacion X .

    multiplicacion  reduce using rule 54 (expMult -> T multiplicacion X .)
    dividir         reduce using rule 54 (expMult -> T multiplicacion X .)
    suma            reduce using rule 54 (expMult -> T multiplicacion X .)
    resta           reduce using rule 54 (expMult -> T multiplicacion X .)
    puntoycoma      reduce using rule 54 (expMult -> T multiplicacion X .)
    cierrallave     reduce using rule 54 (expMult -> T multiplicacion X .)
    cierraparentesis reduce using rule 54 (expMult -> T multiplicacion X .)


state 137

    (55) expDiv -> T dividir X .

    multiplicacion  reduce using rule 55 (expDiv -> T dividir X .)
    dividir         reduce using rule 55 (expDiv -> T dividir X .)
    suma            reduce using rule 55 (expDiv -> T dividir X .)
    resta           reduce using rule 55 (expDiv -> T dividir X .)
    puntoycoma      reduce using rule 55 (expDiv -> T dividir X .)
    cierrallave     reduce using rule 55 (expDiv -> T dividir X .)
    cierraparentesis reduce using rule 55 (expDiv -> T dividir X .)


state 138

    (59) X -> abreparentesis E cierraparentesis .

    multiplicacion  reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    dividir         reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    suma            reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    resta           reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    puntoycoma      reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    cierrallave     reduce using rule 59 (X -> abreparentesis E cierraparentesis .)
    cierraparentesis reduce using rule 59 (X -> abreparentesis E cierraparentesis .)


state 139

    (19) S -> IF EL ifAux Z cierrallave ELSE . ifAux2 Z ifAux3
    (30) ifAux2 -> . abrellave

    abrellave       shift and go to state 147

    ifAux2                         shift and go to state 146

state 140

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis . cierraparentesis

    cierraparentesis shift and go to state 148


state 141

    (22) S -> LET ID asignacion IF abreparentesis EL . cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (65) orAux -> EL . OR AL

    cierraparentesis shift and go to state 149
    OR              shift and go to state 66


state 142

    (24) S -> LOOP abrellave Z abreparentesis EL cierraparentesis . B cierrallave
    (40) B -> . abrellave BREAK cierrallave
    (41) B -> .

    abrellave       shift and go to state 150
    cierrallave     reduce using rule 41 (B -> .)

    B                              shift and go to state 151

state 143

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 . puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5

    puntoycoma      shift and go to state 152


state 144

    (36) forAux2 -> num .

    puntoycoma      reduce using rule 36 (forAux2 -> num .)


state 145

    (57) X -> ID abreparentesis A cierraparentesis .

    multiplicacion  reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    dividir         reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    suma            reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    resta           reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    cierrallave     reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 57 (X -> ID abreparentesis A cierraparentesis .)


state 146

    (19) S -> IF EL ifAux Z cierrallave ELSE ifAux2 . Z ifAux3
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 153
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 147

    (30) ifAux2 -> abrellave .

    ID              reduce using rule 30 (ifAux2 -> abrellave .)
    IF              reduce using rule 30 (ifAux2 -> abrellave .)
    READ            reduce using rule 30 (ifAux2 -> abrellave .)
    PRINT           reduce using rule 30 (ifAux2 -> abrellave .)
    LET             reduce using rule 30 (ifAux2 -> abrellave .)
    LOOP            reduce using rule 30 (ifAux2 -> abrellave .)
    FOR             reduce using rule 30 (ifAux2 -> abrellave .)
    BREAK           reduce using rule 30 (ifAux2 -> abrellave .)
    WHILE           reduce using rule 30 (ifAux2 -> abrellave .)
    puntoycoma      reduce using rule 30 (ifAux2 -> abrellave .)


state 148

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .

    puntoycoma      reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)
    cierrallave     reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)


state 149

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis . abrellave Z cierrallave ELSE abrellave Z cierrallave

    abrellave       shift and go to state 154


state 150

    (40) B -> abrellave . BREAK cierrallave

    BREAK           shift and go to state 155


state 151

    (24) S -> LOOP abrellave Z abreparentesis EL cierraparentesis B . cierrallave

    cierrallave     shift and go to state 156


state 152

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma . forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (37) forAux3 -> . EL
    (61) EL -> . AL
    (62) EL -> . orAux
    (63) AL -> . TL
    (64) AL -> . andAux
    (65) orAux -> . EL OR AL
    (67) TL -> . abreparentesis EL cierraparentesis
    (68) TL -> . Comp
    (66) andAux -> . AL AND TL
    (69) Comp -> . J W J
    (70) J -> . num
    (71) J -> . ID abreparentesis A cierraparentesis
    (72) J -> . IDoux
    (73) IDoux -> . ID

    abreparentesis  shift and go to state 44
    num             shift and go to state 47
    ID              shift and go to state 48

    forAux3                        shift and go to state 157
    EL                             shift and go to state 158
    AL                             shift and go to state 40
    orAux                          shift and go to state 41
    TL                             shift and go to state 42
    andAux                         shift and go to state 43
    Comp                           shift and go to state 45
    J                              shift and go to state 46
    IDoux                          shift and go to state 49

state 153

    (19) S -> IF EL ifAux Z cierrallave ELSE ifAux2 Z . ifAux3
    (13) Z -> Z . S puntoycoma
    (31) ifAux3 -> . cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 159
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    ifAux3                         shift and go to state 160
    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 154

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave . Z cierrallave ELSE abrellave Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 161
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 155

    (40) B -> abrellave BREAK . cierrallave

    cierrallave     shift and go to state 162


state 156

    (24) S -> LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave .

    puntoycoma      reduce using rule 24 (S -> LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave .)
    cierrallave     reduce using rule 24 (S -> LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave .)


state 157

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 . puntoycoma forAux4 cierraparentesis abrellave Z forAux5

    puntoycoma      shift and go to state 163


state 158

    (37) forAux3 -> EL .
    (65) orAux -> EL . OR AL

    puntoycoma      reduce using rule 37 (forAux3 -> EL .)
    OR              shift and go to state 66


state 159

    (31) ifAux3 -> cierrallave .

    puntoycoma      reduce using rule 31 (ifAux3 -> cierrallave .)
    cierrallave     reduce using rule 31 (ifAux3 -> cierrallave .)


state 160

    (19) S -> IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3 .

    puntoycoma      reduce using rule 19 (S -> IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3 .)
    cierrallave     reduce using rule 19 (S -> IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3 .)


state 161

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z . cierrallave ELSE abrellave Z cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 164
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 162

    (40) B -> abrellave BREAK cierrallave .

    cierrallave     reduce using rule 40 (B -> abrellave BREAK cierrallave .)


state 163

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma . forAux4 cierraparentesis abrellave Z forAux5
    (38) forAux4 -> . ID suma num

    ID              shift and go to state 166

    forAux4                        shift and go to state 165

state 164

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave . ELSE abrellave Z cierrallave

    ELSE            shift and go to state 167


state 165

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 . cierraparentesis abrellave Z forAux5

    cierraparentesis shift and go to state 168


state 166

    (38) forAux4 -> ID . suma num

    suma            shift and go to state 169


state 167

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE . abrellave Z cierrallave

    abrellave       shift and go to state 170


state 168

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis . abrellave Z forAux5

    abrellave       shift and go to state 171


state 169

    (38) forAux4 -> ID suma . num

    num             shift and go to state 172


state 170

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 173
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 171

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave . Z forAux5
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    Z                              shift and go to state 174
    S                              shift and go to state 18
    whileAux                       shift and go to state 24

state 172

    (38) forAux4 -> ID suma num .

    cierraparentesis reduce using rule 38 (forAux4 -> ID suma num .)


state 173

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 175
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 174

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z . forAux5
    (13) Z -> Z . S puntoycoma
    (39) forAux5 -> . cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF EL ifAux Z cierrallave ELSE ifAux2 Z ifAux3
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . whileAux EL whileAux2 Z whileAux3
    (24) S -> . LOOP abrellave Z abreparentesis EL cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .
    (32) whileAux -> . WHILE

    cierrallave     shift and go to state 177
    ID              shift and go to state 19
    IF              shift and go to state 20
    READ            shift and go to state 21
    PRINT           shift and go to state 22
    LET             shift and go to state 23
    LOOP            shift and go to state 25
    FOR             shift and go to state 26
    BREAK           shift and go to state 27
    puntoycoma      reduce using rule 28 (S -> .)
    WHILE           shift and go to state 28

    forAux5                        shift and go to state 176
    S                              shift and go to state 35
    whileAux                       shift and go to state 24

state 175

    (22) S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .

    puntoycoma      reduce using rule 22 (S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)
    cierrallave     reduce using rule 22 (S -> LET ID asignacion IF abreparentesis EL cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)


state 176

    (25) S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5 .

    puntoycoma      reduce using rule 25 (S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5 .)
    cierrallave     reduce using rule 25 (S -> FOR abreparentesis LET forAux asignacion forAux2 puntoycoma forAux3 puntoycoma forAux4 cierraparentesis abrellave Z forAux5 .)


state 177

    (39) forAux5 -> cierrallave .

    puntoycoma      reduce using rule 39 (forAux5 -> cierrallave .)
    cierrallave     reduce using rule 39 (forAux5 -> cierrallave .)

