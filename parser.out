Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> V F Main
Rule 2     V -> LET aux asignacion K puntoycoma V
Rule 3     V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
Rule 4     V -> <empty>
Rule 5     aux -> type ID
Rule 6     type -> INT
Rule 7     type -> FLT
Rule 8     A -> num
Rule 9     A -> A coma num
Rule 10    Main -> BEGIN puntoycoma Z END puntoycoma
Rule 11    Main -> <empty>
Rule 12    Z -> S puntoycoma
Rule 13    Z -> Z S puntoycoma
Rule 14    K -> ID
Rule 15    K -> num
Rule 16    F -> F FUNCTION ID abrellave S cierrallave
Rule 17    F -> <empty>
Rule 18    S -> ID abreparentesis cierraparentesis
Rule 19    S -> IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
Rule 20    S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
Rule 21    S -> PRINT abreparentesis M cierraparentesis
Rule 22    S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
Rule 23    S -> WHILE C abrellave Z cierrallave
Rule 24    S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
Rule 25    S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
Rule 26    S -> ID D asignacion E
Rule 27    S -> BREAK
Rule 28    S -> <empty>
Rule 29    B -> abrellave BREAK cierrallave
Rule 30    B -> <empty>
Rule 31    M -> comillasdobles K comillasdobles
Rule 32    M -> A
Rule 33    D -> abreparentesis A cierraparentesis
Rule 34    D -> <empty>
Rule 35    E -> E suma T
Rule 36    E -> E resta T
Rule 37    E -> T
Rule 38    T -> T multiplicacion X
Rule 39    T -> T dividir X
Rule 40    T -> X
Rule 41    X -> ID
Rule 42    X -> ID abreparentesis A cierraparentesis
Rule 43    X -> num
Rule 44    X -> abreparentesis E cierraparentesis
Rule 45    EL -> TL
Rule 46    EL -> EL OR TL
Rule 47    TL -> C
Rule 48    TL -> TL AND C
Rule 49    C -> abreparentesis EL cierraparentesis
Rule 50    C -> J W J
Rule 51    J -> ID abreparentesis A cierraparentesis
Rule 52    J -> ID
Rule 53    J -> num
Rule 54    W -> mayorigual
Rule 55    W -> menorigual
Rule 56    W -> menor
Rule 57    W -> mayor
Rule 58    W -> igualque
Rule 59    W -> diferenteque

Terminals, with rules where they appear

AND                  : 48
BEGIN                : 10
BREAK                : 27 29
ELSE                 : 19 22
END                  : 10
FLT                  : 7
FOR                  : 25
FUNCTION             : 16
ID                   : 5 14 16 18 20 22 25 25 26 41 42 51 52
IF                   : 19 22
INT                  : 6
LET                  : 2 3 22 25
LOOP                 : 24
OR                   : 46
PRINT                : 21
READ                 : 20
WHILE                : 23
abrellave            : 16 19 19 22 22 23 24 25 29
abreparentesis       : 3 18 20 20 21 22 24 25 33 42 44 49 51
asignacion           : 2 3 22 25 26
cierrallave          : 16 19 19 22 22 23 24 25 29
cierraparentesis     : 3 18 20 20 21 22 24 25 33 42 44 49 51
coma                 : 9
comillasdobles       : 31 31
diferenteque         : 59
dividir              : 39
error                : 
igualque             : 58
mayor                : 57
mayorigual           : 54
menor                : 56
menorigual           : 55
multiplicacion       : 38
num                  : 8 9 15 25 43 53
puntoycoma           : 2 3 10 10 12 13 25 25
resta                : 36
suma                 : 25 35

Nonterminals, with rules where they appear

A                    : 3 9 20 32 33 42 51
B                    : 24
C                    : 19 22 23 24 25 47 48
D                    : 26
E                    : 26 35 36 44
EL                   : 46 49
F                    : 1 16
J                    : 50 50
K                    : 2 25 31
M                    : 21
Main                 : 1
Programa             : 0
S                    : 12 13 16
T                    : 35 36 37 38 39
TL                   : 45 46 48
V                    : 1 2 3
W                    : 50
X                    : 38 39 40
Z                    : 10 13 19 19 22 22 23 24 25
aux                  : 2 3
type                 : 5 25

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . V F Main
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    Programa                       shift and go to state 1
    V                              shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> V . F Main
    (16) F -> . F FUNCTION ID abrellave S cierrallave
    (17) F -> .

    FUNCTION        reduce using rule 17 (F -> .)
    BEGIN           reduce using rule 17 (F -> .)
    $end            reduce using rule 17 (F -> .)

    F                              shift and go to state 4

state 3

    (2) V -> LET . aux asignacion K puntoycoma V
    (3) V -> LET . aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (5) aux -> . type ID
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 7
    FLT             shift and go to state 8

    aux                            shift and go to state 5
    type                           shift and go to state 6

state 4

    (1) Programa -> V F . Main
    (16) F -> F . FUNCTION ID abrellave S cierrallave
    (10) Main -> . BEGIN puntoycoma Z END puntoycoma
    (11) Main -> .

    FUNCTION        shift and go to state 10
    BEGIN           shift and go to state 11
    $end            reduce using rule 11 (Main -> .)

    Main                           shift and go to state 9

state 5

    (2) V -> LET aux . asignacion K puntoycoma V
    (3) V -> LET aux . asignacion abreparentesis A cierraparentesis puntoycoma V

    asignacion      shift and go to state 12


state 6

    (5) aux -> type . ID

    ID              shift and go to state 13


state 7

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 8

    (7) type -> FLT .

    ID              reduce using rule 7 (type -> FLT .)


state 9

    (1) Programa -> V F Main .

    $end            reduce using rule 1 (Programa -> V F Main .)


state 10

    (16) F -> F FUNCTION . ID abrellave S cierrallave

    ID              shift and go to state 14


state 11

    (10) Main -> BEGIN . puntoycoma Z END puntoycoma

    puntoycoma      shift and go to state 15


state 12

    (2) V -> LET aux asignacion . K puntoycoma V
    (3) V -> LET aux asignacion . abreparentesis A cierraparentesis puntoycoma V
    (14) K -> . ID
    (15) K -> . num

    abreparentesis  shift and go to state 17
    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 16

state 13

    (5) aux -> type ID .

    asignacion      reduce using rule 5 (aux -> type ID .)


state 14

    (16) F -> F FUNCTION ID . abrellave S cierrallave

    abrellave       shift and go to state 20


state 15

    (10) Main -> BEGIN puntoycoma . Z END puntoycoma
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 21
    S                              shift and go to state 22

state 16

    (2) V -> LET aux asignacion K . puntoycoma V

    puntoycoma      shift and go to state 32


state 17

    (3) V -> LET aux asignacion abreparentesis . A cierraparentesis puntoycoma V
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 33

state 18

    (14) K -> ID .

    puntoycoma      reduce using rule 14 (K -> ID .)
    comillasdobles  reduce using rule 14 (K -> ID .)


state 19

    (15) K -> num .

    puntoycoma      reduce using rule 15 (K -> num .)
    comillasdobles  reduce using rule 15 (K -> num .)


state 20

    (16) F -> F FUNCTION ID abrellave . S cierrallave
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    cierrallave     reduce using rule 28 (S -> .)

    S                              shift and go to state 35

state 21

    (10) Main -> BEGIN puntoycoma Z . END puntoycoma
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    END             shift and go to state 36
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 22

    (12) Z -> S . puntoycoma

    puntoycoma      shift and go to state 38


state 23

    (18) S -> ID . abreparentesis cierraparentesis
    (26) S -> ID . D asignacion E
    (33) D -> . abreparentesis A cierraparentesis
    (34) D -> .

    abreparentesis  shift and go to state 39
    asignacion      reduce using rule 34 (D -> .)

    D                              shift and go to state 40

state 24

    (19) S -> IF . C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 41
    J                              shift and go to state 43

state 25

    (20) S -> READ . abreparentesis ID abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 46


state 26

    (21) S -> PRINT . abreparentesis M cierraparentesis

    abreparentesis  shift and go to state 47


state 27

    (22) S -> LET . ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    ID              shift and go to state 48


state 28

    (23) S -> WHILE . C abrellave Z cierrallave
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 49
    J                              shift and go to state 43

state 29

    (24) S -> LOOP . abrellave Z abreparentesis C cierraparentesis B cierrallave

    abrellave       shift and go to state 50


state 30

    (25) S -> FOR . abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    abreparentesis  shift and go to state 51


state 31

    (27) S -> BREAK .

    puntoycoma      reduce using rule 27 (S -> BREAK .)
    cierrallave     reduce using rule 27 (S -> BREAK .)


state 32

    (2) V -> LET aux asignacion K puntoycoma . V
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    V                              shift and go to state 52

state 33

    (3) V -> LET aux asignacion abreparentesis A . cierraparentesis puntoycoma V
    (9) A -> A . coma num

    cierraparentesis shift and go to state 53
    coma            shift and go to state 54


state 34

    (8) A -> num .

    cierraparentesis reduce using rule 8 (A -> num .)
    coma            reduce using rule 8 (A -> num .)


state 35

    (16) F -> F FUNCTION ID abrellave S . cierrallave

    cierrallave     shift and go to state 55


state 36

    (10) Main -> BEGIN puntoycoma Z END . puntoycoma

    puntoycoma      shift and go to state 56


state 37

    (13) Z -> Z S . puntoycoma

    puntoycoma      shift and go to state 57


state 38

    (12) Z -> S puntoycoma .

    END             reduce using rule 12 (Z -> S puntoycoma .)
    ID              reduce using rule 12 (Z -> S puntoycoma .)
    IF              reduce using rule 12 (Z -> S puntoycoma .)
    READ            reduce using rule 12 (Z -> S puntoycoma .)
    PRINT           reduce using rule 12 (Z -> S puntoycoma .)
    LET             reduce using rule 12 (Z -> S puntoycoma .)
    WHILE           reduce using rule 12 (Z -> S puntoycoma .)
    LOOP            reduce using rule 12 (Z -> S puntoycoma .)
    FOR             reduce using rule 12 (Z -> S puntoycoma .)
    BREAK           reduce using rule 12 (Z -> S puntoycoma .)
    puntoycoma      reduce using rule 12 (Z -> S puntoycoma .)
    abreparentesis  reduce using rule 12 (Z -> S puntoycoma .)
    cierrallave     reduce using rule 12 (Z -> S puntoycoma .)


state 39

    (18) S -> ID abreparentesis . cierraparentesis
    (33) D -> abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    cierraparentesis shift and go to state 58
    num             shift and go to state 34

    A                              shift and go to state 59

state 40

    (26) S -> ID D . asignacion E

    asignacion      shift and go to state 60


state 41

    (19) S -> IF C . abrellave Z cierrallave ELSE abrellave Z cierrallave

    abrellave       shift and go to state 61


state 42

    (49) C -> abreparentesis . EL cierraparentesis
    (45) EL -> . TL
    (46) EL -> . EL OR TL
    (47) TL -> . C
    (48) TL -> . TL AND C
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    EL                             shift and go to state 62
    TL                             shift and go to state 63
    C                              shift and go to state 64
    J                              shift and go to state 43

state 43

    (50) C -> J . W J
    (54) W -> . mayorigual
    (55) W -> . menorigual
    (56) W -> . menor
    (57) W -> . mayor
    (58) W -> . igualque
    (59) W -> . diferenteque

    mayorigual      shift and go to state 66
    menorigual      shift and go to state 67
    menor           shift and go to state 68
    mayor           shift and go to state 69
    igualque        shift and go to state 70
    diferenteque    shift and go to state 71

    W                              shift and go to state 65

state 44

    (51) J -> ID . abreparentesis A cierraparentesis
    (52) J -> ID .

    abreparentesis  shift and go to state 72
    mayorigual      reduce using rule 52 (J -> ID .)
    menorigual      reduce using rule 52 (J -> ID .)
    menor           reduce using rule 52 (J -> ID .)
    mayor           reduce using rule 52 (J -> ID .)
    igualque        reduce using rule 52 (J -> ID .)
    diferenteque    reduce using rule 52 (J -> ID .)
    abrellave       reduce using rule 52 (J -> ID .)
    AND             reduce using rule 52 (J -> ID .)
    cierraparentesis reduce using rule 52 (J -> ID .)
    OR              reduce using rule 52 (J -> ID .)
    puntoycoma      reduce using rule 52 (J -> ID .)


state 45

    (53) J -> num .

    mayorigual      reduce using rule 53 (J -> num .)
    menorigual      reduce using rule 53 (J -> num .)
    menor           reduce using rule 53 (J -> num .)
    mayor           reduce using rule 53 (J -> num .)
    igualque        reduce using rule 53 (J -> num .)
    diferenteque    reduce using rule 53 (J -> num .)
    abrellave       reduce using rule 53 (J -> num .)
    AND             reduce using rule 53 (J -> num .)
    cierraparentesis reduce using rule 53 (J -> num .)
    OR              reduce using rule 53 (J -> num .)
    puntoycoma      reduce using rule 53 (J -> num .)


state 46

    (20) S -> READ abreparentesis . ID abreparentesis A cierraparentesis cierraparentesis

    ID              shift and go to state 73


state 47

    (21) S -> PRINT abreparentesis . M cierraparentesis
    (31) M -> . comillasdobles K comillasdobles
    (32) M -> . A
    (8) A -> . num
    (9) A -> . A coma num

    comillasdobles  shift and go to state 75
    num             shift and go to state 34

    M                              shift and go to state 74
    A                              shift and go to state 76

state 48

    (22) S -> LET ID . asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    asignacion      shift and go to state 77


state 49

    (23) S -> WHILE C . abrellave Z cierrallave

    abrellave       shift and go to state 78


state 50

    (24) S -> LOOP abrellave . Z abreparentesis C cierraparentesis B cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 79
    S                              shift and go to state 22

state 51

    (25) S -> FOR abreparentesis . LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    LET             shift and go to state 80


state 52

    (2) V -> LET aux asignacion K puntoycoma V .

    FUNCTION        reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)
    BEGIN           reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)
    $end            reduce using rule 2 (V -> LET aux asignacion K puntoycoma V .)


state 53

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis . puntoycoma V

    puntoycoma      shift and go to state 81


state 54

    (9) A -> A coma . num

    num             shift and go to state 82


state 55

    (16) F -> F FUNCTION ID abrellave S cierrallave .

    FUNCTION        reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    BEGIN           reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)
    $end            reduce using rule 16 (F -> F FUNCTION ID abrellave S cierrallave .)


state 56

    (10) Main -> BEGIN puntoycoma Z END puntoycoma .

    $end            reduce using rule 10 (Main -> BEGIN puntoycoma Z END puntoycoma .)


state 57

    (13) Z -> Z S puntoycoma .

    END             reduce using rule 13 (Z -> Z S puntoycoma .)
    ID              reduce using rule 13 (Z -> Z S puntoycoma .)
    IF              reduce using rule 13 (Z -> Z S puntoycoma .)
    READ            reduce using rule 13 (Z -> Z S puntoycoma .)
    PRINT           reduce using rule 13 (Z -> Z S puntoycoma .)
    LET             reduce using rule 13 (Z -> Z S puntoycoma .)
    WHILE           reduce using rule 13 (Z -> Z S puntoycoma .)
    LOOP            reduce using rule 13 (Z -> Z S puntoycoma .)
    FOR             reduce using rule 13 (Z -> Z S puntoycoma .)
    BREAK           reduce using rule 13 (Z -> Z S puntoycoma .)
    puntoycoma      reduce using rule 13 (Z -> Z S puntoycoma .)
    abreparentesis  reduce using rule 13 (Z -> Z S puntoycoma .)
    cierrallave     reduce using rule 13 (Z -> Z S puntoycoma .)


state 58

    (18) S -> ID abreparentesis cierraparentesis .

    puntoycoma      reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)
    cierrallave     reduce using rule 18 (S -> ID abreparentesis cierraparentesis .)


state 59

    (33) D -> abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 83
    coma            shift and go to state 54


state 60

    (26) S -> ID D asignacion . E
    (35) E -> . E suma T
    (36) E -> . E resta T
    (37) E -> . T
    (38) T -> . T multiplicacion X
    (39) T -> . T dividir X
    (40) T -> . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    E                              shift and go to state 85
    T                              shift and go to state 86
    X                              shift and go to state 87

state 61

    (19) S -> IF C abrellave . Z cierrallave ELSE abrellave Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 90
    S                              shift and go to state 22

state 62

    (49) C -> abreparentesis EL . cierraparentesis
    (46) EL -> EL . OR TL

    cierraparentesis shift and go to state 91
    OR              shift and go to state 92


state 63

    (45) EL -> TL .
    (48) TL -> TL . AND C

    cierraparentesis reduce using rule 45 (EL -> TL .)
    OR              reduce using rule 45 (EL -> TL .)
    AND             shift and go to state 93


state 64

    (47) TL -> C .

    AND             reduce using rule 47 (TL -> C .)
    cierraparentesis reduce using rule 47 (TL -> C .)
    OR              reduce using rule 47 (TL -> C .)


state 65

    (50) C -> J W . J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    ID              shift and go to state 44
    num             shift and go to state 45

    J                              shift and go to state 94

state 66

    (54) W -> mayorigual .

    ID              reduce using rule 54 (W -> mayorigual .)
    num             reduce using rule 54 (W -> mayorigual .)


state 67

    (55) W -> menorigual .

    ID              reduce using rule 55 (W -> menorigual .)
    num             reduce using rule 55 (W -> menorigual .)


state 68

    (56) W -> menor .

    ID              reduce using rule 56 (W -> menor .)
    num             reduce using rule 56 (W -> menor .)


state 69

    (57) W -> mayor .

    ID              reduce using rule 57 (W -> mayor .)
    num             reduce using rule 57 (W -> mayor .)


state 70

    (58) W -> igualque .

    ID              reduce using rule 58 (W -> igualque .)
    num             reduce using rule 58 (W -> igualque .)


state 71

    (59) W -> diferenteque .

    ID              reduce using rule 59 (W -> diferenteque .)
    num             reduce using rule 59 (W -> diferenteque .)


state 72

    (51) J -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 95

state 73

    (20) S -> READ abreparentesis ID . abreparentesis A cierraparentesis cierraparentesis

    abreparentesis  shift and go to state 96


state 74

    (21) S -> PRINT abreparentesis M . cierraparentesis

    cierraparentesis shift and go to state 97


state 75

    (31) M -> comillasdobles . K comillasdobles
    (14) K -> . ID
    (15) K -> . num

    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 98

state 76

    (32) M -> A .
    (9) A -> A . coma num

    cierraparentesis reduce using rule 32 (M -> A .)
    coma            shift and go to state 54


state 77

    (22) S -> LET ID asignacion . IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    IF              shift and go to state 99


state 78

    (23) S -> WHILE C abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 100
    S                              shift and go to state 22

state 79

    (24) S -> LOOP abrellave Z . abreparentesis C cierraparentesis B cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    abreparentesis  shift and go to state 101
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 80

    (25) S -> FOR abreparentesis LET . type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (6) type -> . INT
    (7) type -> . FLT

    INT             shift and go to state 7
    FLT             shift and go to state 8

    type                           shift and go to state 102

state 81

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma . V
    (2) V -> . LET aux asignacion K puntoycoma V
    (3) V -> . LET aux asignacion abreparentesis A cierraparentesis puntoycoma V
    (4) V -> .

    LET             shift and go to state 3
    FUNCTION        reduce using rule 4 (V -> .)
    BEGIN           reduce using rule 4 (V -> .)
    $end            reduce using rule 4 (V -> .)

    V                              shift and go to state 103

state 82

    (9) A -> A coma num .

    cierraparentesis reduce using rule 9 (A -> A coma num .)
    coma            reduce using rule 9 (A -> A coma num .)


state 83

    (33) D -> abreparentesis A cierraparentesis .

    asignacion      reduce using rule 33 (D -> abreparentesis A cierraparentesis .)


state 84

    (41) X -> ID .
    (42) X -> ID . abreparentesis A cierraparentesis

    multiplicacion  reduce using rule 41 (X -> ID .)
    dividir         reduce using rule 41 (X -> ID .)
    suma            reduce using rule 41 (X -> ID .)
    resta           reduce using rule 41 (X -> ID .)
    puntoycoma      reduce using rule 41 (X -> ID .)
    cierrallave     reduce using rule 41 (X -> ID .)
    cierraparentesis reduce using rule 41 (X -> ID .)
    abreparentesis  shift and go to state 104


state 85

    (26) S -> ID D asignacion E .
    (35) E -> E . suma T
    (36) E -> E . resta T

    puntoycoma      reduce using rule 26 (S -> ID D asignacion E .)
    cierrallave     reduce using rule 26 (S -> ID D asignacion E .)
    suma            shift and go to state 105
    resta           shift and go to state 106


state 86

    (37) E -> T .
    (38) T -> T . multiplicacion X
    (39) T -> T . dividir X

    suma            reduce using rule 37 (E -> T .)
    resta           reduce using rule 37 (E -> T .)
    puntoycoma      reduce using rule 37 (E -> T .)
    cierrallave     reduce using rule 37 (E -> T .)
    cierraparentesis reduce using rule 37 (E -> T .)
    multiplicacion  shift and go to state 107
    dividir         shift and go to state 108


state 87

    (40) T -> X .

    multiplicacion  reduce using rule 40 (T -> X .)
    dividir         reduce using rule 40 (T -> X .)
    suma            reduce using rule 40 (T -> X .)
    resta           reduce using rule 40 (T -> X .)
    puntoycoma      reduce using rule 40 (T -> X .)
    cierrallave     reduce using rule 40 (T -> X .)
    cierraparentesis reduce using rule 40 (T -> X .)


state 88

    (44) X -> abreparentesis . E cierraparentesis
    (35) E -> . E suma T
    (36) E -> . E resta T
    (37) E -> . T
    (38) T -> . T multiplicacion X
    (39) T -> . T dividir X
    (40) T -> . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    E                              shift and go to state 109
    T                              shift and go to state 86
    X                              shift and go to state 87

state 89

    (43) X -> num .

    multiplicacion  reduce using rule 43 (X -> num .)
    dividir         reduce using rule 43 (X -> num .)
    suma            reduce using rule 43 (X -> num .)
    resta           reduce using rule 43 (X -> num .)
    puntoycoma      reduce using rule 43 (X -> num .)
    cierrallave     reduce using rule 43 (X -> num .)
    cierraparentesis reduce using rule 43 (X -> num .)


state 90

    (19) S -> IF C abrellave Z . cierrallave ELSE abrellave Z cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 110
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 91

    (49) C -> abreparentesis EL cierraparentesis .

    abrellave       reduce using rule 49 (C -> abreparentesis EL cierraparentesis .)
    AND             reduce using rule 49 (C -> abreparentesis EL cierraparentesis .)
    cierraparentesis reduce using rule 49 (C -> abreparentesis EL cierraparentesis .)
    OR              reduce using rule 49 (C -> abreparentesis EL cierraparentesis .)
    puntoycoma      reduce using rule 49 (C -> abreparentesis EL cierraparentesis .)


state 92

    (46) EL -> EL OR . TL
    (47) TL -> . C
    (48) TL -> . TL AND C
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    TL                             shift and go to state 111
    C                              shift and go to state 64
    J                              shift and go to state 43

state 93

    (48) TL -> TL AND . C
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 112
    J                              shift and go to state 43

state 94

    (50) C -> J W J .

    abrellave       reduce using rule 50 (C -> J W J .)
    AND             reduce using rule 50 (C -> J W J .)
    cierraparentesis reduce using rule 50 (C -> J W J .)
    OR              reduce using rule 50 (C -> J W J .)
    puntoycoma      reduce using rule 50 (C -> J W J .)


state 95

    (51) J -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 113
    coma            shift and go to state 54


state 96

    (20) S -> READ abreparentesis ID abreparentesis . A cierraparentesis cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 114

state 97

    (21) S -> PRINT abreparentesis M cierraparentesis .

    puntoycoma      reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)
    cierrallave     reduce using rule 21 (S -> PRINT abreparentesis M cierraparentesis .)


state 98

    (31) M -> comillasdobles K . comillasdobles

    comillasdobles  shift and go to state 115


state 99

    (22) S -> LET ID asignacion IF . abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    abreparentesis  shift and go to state 116


state 100

    (23) S -> WHILE C abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 117
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 101

    (24) S -> LOOP abrellave Z abreparentesis . C cierraparentesis B cierrallave
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 118
    J                              shift and go to state 43

state 102

    (25) S -> FOR abreparentesis LET type . ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    ID              shift and go to state 119


state 103

    (3) V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .

    FUNCTION        reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)
    BEGIN           reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)
    $end            reduce using rule 3 (V -> LET aux asignacion abreparentesis A cierraparentesis puntoycoma V .)


state 104

    (42) X -> ID abreparentesis . A cierraparentesis
    (8) A -> . num
    (9) A -> . A coma num

    num             shift and go to state 34

    A                              shift and go to state 120

state 105

    (35) E -> E suma . T
    (38) T -> . T multiplicacion X
    (39) T -> . T dividir X
    (40) T -> . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    T                              shift and go to state 121
    X                              shift and go to state 87

state 106

    (36) E -> E resta . T
    (38) T -> . T multiplicacion X
    (39) T -> . T dividir X
    (40) T -> . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    T                              shift and go to state 122
    X                              shift and go to state 87

state 107

    (38) T -> T multiplicacion . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    X                              shift and go to state 123

state 108

    (39) T -> T dividir . X
    (41) X -> . ID
    (42) X -> . ID abreparentesis A cierraparentesis
    (43) X -> . num
    (44) X -> . abreparentesis E cierraparentesis

    ID              shift and go to state 84
    num             shift and go to state 89
    abreparentesis  shift and go to state 88

    X                              shift and go to state 124

state 109

    (44) X -> abreparentesis E . cierraparentesis
    (35) E -> E . suma T
    (36) E -> E . resta T

    cierraparentesis shift and go to state 125
    suma            shift and go to state 105
    resta           shift and go to state 106


state 110

    (19) S -> IF C abrellave Z cierrallave . ELSE abrellave Z cierrallave

    ELSE            shift and go to state 126


state 111

    (46) EL -> EL OR TL .
    (48) TL -> TL . AND C

    cierraparentesis reduce using rule 46 (EL -> EL OR TL .)
    OR              reduce using rule 46 (EL -> EL OR TL .)
    AND             shift and go to state 93


state 112

    (48) TL -> TL AND C .

    AND             reduce using rule 48 (TL -> TL AND C .)
    cierraparentesis reduce using rule 48 (TL -> TL AND C .)
    OR              reduce using rule 48 (TL -> TL AND C .)


state 113

    (51) J -> ID abreparentesis A cierraparentesis .

    mayorigual      reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    menorigual      reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    menor           reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    mayor           reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    igualque        reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    diferenteque    reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    abrellave       reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    AND             reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    OR              reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 51 (J -> ID abreparentesis A cierraparentesis .)


state 114

    (20) S -> READ abreparentesis ID abreparentesis A . cierraparentesis cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 127
    coma            shift and go to state 54


state 115

    (31) M -> comillasdobles K comillasdobles .

    cierraparentesis reduce using rule 31 (M -> comillasdobles K comillasdobles .)


state 116

    (22) S -> LET ID asignacion IF abreparentesis . C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 128
    J                              shift and go to state 43

state 117

    (23) S -> WHILE C abrellave Z cierrallave .

    puntoycoma      reduce using rule 23 (S -> WHILE C abrellave Z cierrallave .)
    cierrallave     reduce using rule 23 (S -> WHILE C abrellave Z cierrallave .)


state 118

    (24) S -> LOOP abrellave Z abreparentesis C . cierraparentesis B cierrallave

    cierraparentesis shift and go to state 129


state 119

    (25) S -> FOR abreparentesis LET type ID . asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    asignacion      shift and go to state 130


state 120

    (42) X -> ID abreparentesis A . cierraparentesis
    (9) A -> A . coma num

    cierraparentesis shift and go to state 131
    coma            shift and go to state 54


state 121

    (35) E -> E suma T .
    (38) T -> T . multiplicacion X
    (39) T -> T . dividir X

    suma            reduce using rule 35 (E -> E suma T .)
    resta           reduce using rule 35 (E -> E suma T .)
    puntoycoma      reduce using rule 35 (E -> E suma T .)
    cierrallave     reduce using rule 35 (E -> E suma T .)
    cierraparentesis reduce using rule 35 (E -> E suma T .)
    multiplicacion  shift and go to state 107
    dividir         shift and go to state 108


state 122

    (36) E -> E resta T .
    (38) T -> T . multiplicacion X
    (39) T -> T . dividir X

    suma            reduce using rule 36 (E -> E resta T .)
    resta           reduce using rule 36 (E -> E resta T .)
    puntoycoma      reduce using rule 36 (E -> E resta T .)
    cierrallave     reduce using rule 36 (E -> E resta T .)
    cierraparentesis reduce using rule 36 (E -> E resta T .)
    multiplicacion  shift and go to state 107
    dividir         shift and go to state 108


state 123

    (38) T -> T multiplicacion X .

    multiplicacion  reduce using rule 38 (T -> T multiplicacion X .)
    dividir         reduce using rule 38 (T -> T multiplicacion X .)
    suma            reduce using rule 38 (T -> T multiplicacion X .)
    resta           reduce using rule 38 (T -> T multiplicacion X .)
    puntoycoma      reduce using rule 38 (T -> T multiplicacion X .)
    cierrallave     reduce using rule 38 (T -> T multiplicacion X .)
    cierraparentesis reduce using rule 38 (T -> T multiplicacion X .)


state 124

    (39) T -> T dividir X .

    multiplicacion  reduce using rule 39 (T -> T dividir X .)
    dividir         reduce using rule 39 (T -> T dividir X .)
    suma            reduce using rule 39 (T -> T dividir X .)
    resta           reduce using rule 39 (T -> T dividir X .)
    puntoycoma      reduce using rule 39 (T -> T dividir X .)
    cierrallave     reduce using rule 39 (T -> T dividir X .)
    cierraparentesis reduce using rule 39 (T -> T dividir X .)


state 125

    (44) X -> abreparentesis E cierraparentesis .

    multiplicacion  reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    dividir         reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    suma            reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    resta           reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    puntoycoma      reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    cierrallave     reduce using rule 44 (X -> abreparentesis E cierraparentesis .)
    cierraparentesis reduce using rule 44 (X -> abreparentesis E cierraparentesis .)


state 126

    (19) S -> IF C abrellave Z cierrallave ELSE . abrellave Z cierrallave

    abrellave       shift and go to state 132


state 127

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis . cierraparentesis

    cierraparentesis shift and go to state 133


state 128

    (22) S -> LET ID asignacion IF abreparentesis C . cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave

    cierraparentesis shift and go to state 134


state 129

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis . B cierrallave
    (29) B -> . abrellave BREAK cierrallave
    (30) B -> .

    abrellave       shift and go to state 135
    cierrallave     reduce using rule 30 (B -> .)

    B                              shift and go to state 136

state 130

    (25) S -> FOR abreparentesis LET type ID asignacion . K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (14) K -> . ID
    (15) K -> . num

    ID              shift and go to state 18
    num             shift and go to state 19

    K                              shift and go to state 137

state 131

    (42) X -> ID abreparentesis A cierraparentesis .

    multiplicacion  reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    dividir         reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    suma            reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    resta           reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    puntoycoma      reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    cierrallave     reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)
    cierraparentesis reduce using rule 42 (X -> ID abreparentesis A cierraparentesis .)


state 132

    (19) S -> IF C abrellave Z cierrallave ELSE abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 138
    S                              shift and go to state 22

state 133

    (20) S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .

    puntoycoma      reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)
    cierrallave     reduce using rule 20 (S -> READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis .)


state 134

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis . abrellave Z cierrallave ELSE abrellave Z cierrallave

    abrellave       shift and go to state 139


state 135

    (29) B -> abrellave . BREAK cierrallave

    BREAK           shift and go to state 140


state 136

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis B . cierrallave

    cierrallave     shift and go to state 141


state 137

    (25) S -> FOR abreparentesis LET type ID asignacion K . puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    puntoycoma      shift and go to state 142


state 138

    (19) S -> IF C abrellave Z cierrallave ELSE abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 143
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 139

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave . Z cierrallave ELSE abrellave Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 144
    S                              shift and go to state 22

state 140

    (29) B -> abrellave BREAK . cierrallave

    cierrallave     shift and go to state 145


state 141

    (24) S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .

    puntoycoma      reduce using rule 24 (S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .)
    cierrallave     reduce using rule 24 (S -> LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave .)


state 142

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma . C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (49) C -> . abreparentesis EL cierraparentesis
    (50) C -> . J W J
    (51) J -> . ID abreparentesis A cierraparentesis
    (52) J -> . ID
    (53) J -> . num

    abreparentesis  shift and go to state 42
    ID              shift and go to state 44
    num             shift and go to state 45

    C                              shift and go to state 146
    J                              shift and go to state 43

state 143

    (19) S -> IF C abrellave Z cierrallave ELSE abrellave Z cierrallave .

    puntoycoma      reduce using rule 19 (S -> IF C abrellave Z cierrallave ELSE abrellave Z cierrallave .)
    cierrallave     reduce using rule 19 (S -> IF C abrellave Z cierrallave ELSE abrellave Z cierrallave .)


state 144

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z . cierrallave ELSE abrellave Z cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 147
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 145

    (29) B -> abrellave BREAK cierrallave .

    cierrallave     reduce using rule 29 (B -> abrellave BREAK cierrallave .)


state 146

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C . puntoycoma ID suma num cierraparentesis abrellave Z cierrallave

    puntoycoma      shift and go to state 148


state 147

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave . ELSE abrellave Z cierrallave

    ELSE            shift and go to state 149


state 148

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma . ID suma num cierraparentesis abrellave Z cierrallave

    ID              shift and go to state 150


state 149

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE . abrellave Z cierrallave

    abrellave       shift and go to state 151


state 150

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID . suma num cierraparentesis abrellave Z cierrallave

    suma            shift and go to state 152


state 151

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 153
    S                              shift and go to state 22

state 152

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma . num cierraparentesis abrellave Z cierrallave

    num             shift and go to state 154


state 153

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 155
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 154

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num . cierraparentesis abrellave Z cierrallave

    cierraparentesis shift and go to state 156


state 155

    (22) S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .

    puntoycoma      reduce using rule 22 (S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)
    cierrallave     reduce using rule 22 (S -> LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave .)


state 156

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis . abrellave Z cierrallave

    abrellave       shift and go to state 157


state 157

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave . Z cierrallave
    (12) Z -> . S puntoycoma
    (13) Z -> . Z S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    Z                              shift and go to state 158
    S                              shift and go to state 22

state 158

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z . cierrallave
    (13) Z -> Z . S puntoycoma
    (18) S -> . ID abreparentesis cierraparentesis
    (19) S -> . IF C abrellave Z cierrallave ELSE abrellave Z cierrallave
    (20) S -> . READ abreparentesis ID abreparentesis A cierraparentesis cierraparentesis
    (21) S -> . PRINT abreparentesis M cierraparentesis
    (22) S -> . LET ID asignacion IF abreparentesis C cierraparentesis abrellave Z cierrallave ELSE abrellave Z cierrallave
    (23) S -> . WHILE C abrellave Z cierrallave
    (24) S -> . LOOP abrellave Z abreparentesis C cierraparentesis B cierrallave
    (25) S -> . FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave
    (26) S -> . ID D asignacion E
    (27) S -> . BREAK
    (28) S -> .

    cierrallave     shift and go to state 159
    ID              shift and go to state 23
    IF              shift and go to state 24
    READ            shift and go to state 25
    PRINT           shift and go to state 26
    LET             shift and go to state 27
    WHILE           shift and go to state 28
    LOOP            shift and go to state 29
    FOR             shift and go to state 30
    BREAK           shift and go to state 31
    puntoycoma      reduce using rule 28 (S -> .)

    S                              shift and go to state 37

state 159

    (25) S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .

    puntoycoma      reduce using rule 25 (S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .)
    cierrallave     reduce using rule 25 (S -> FOR abreparentesis LET type ID asignacion K puntoycoma C puntoycoma ID suma num cierraparentesis abrellave Z cierrallave .)

